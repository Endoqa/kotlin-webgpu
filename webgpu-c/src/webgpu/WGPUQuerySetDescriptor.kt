// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUQuerySetDescriptor(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStruct>
        get() = WGPUQuerySetDescriptor.nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUQuerySetDescriptor.nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var label: Pointer<Byte>
        get() = WGPUQuerySetDescriptor.labelHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUQuerySetDescriptor.labelHandle.set(this.`$mem`, 0L, value)
        }

    public var type: WGPUQueryType
        get() = WGPUQueryType.fromInt(WGPUQuerySetDescriptor.typeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            WGPUQuerySetDescriptor.typeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var count: uint32_t
        get() = (WGPUQuerySetDescriptor.countHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUQuerySetDescriptor.countHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUQuerySetDescriptor.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            `$RuntimeHelper`.POINTER.withName("label"),
            ValueLayout.JAVA_INT.withName("type"),
            ValueLayout.JAVA_INT.withName("count"),
        ).withName("WGPUQuerySetDescriptor")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val labelHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("label"))

        @JvmField
        public val typeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("type"))

        @JvmField
        public val countHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("count"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUQuerySetDescriptor =
            WGPUQuerySetDescriptor(alloc.allocate(WGPUQuerySetDescriptor.layout))
    }
}
