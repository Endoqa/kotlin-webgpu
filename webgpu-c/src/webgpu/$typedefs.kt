// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

public typealias int32_t = Int

public typealias uint8_t = UByte

public typealias uint16_t = UShort

public typealias uint32_t = UInt

public typealias uint64_t = ULong

public typealias WGPUFlags = uint32_t

public typealias WGPUBool = uint32_t

public typealias WGPUAdapter = Pointer<WGPUAdapterImpl>

public typealias WGPUBindGroup = Pointer<WGPUBindGroupImpl>

public typealias WGPUBindGroupLayout = Pointer<WGPUBindGroupLayoutImpl>

public typealias WGPUBuffer = Pointer<WGPUBufferImpl>

public typealias WGPUCommandBuffer = Pointer<WGPUCommandBufferImpl>

public typealias WGPUCommandEncoder = Pointer<WGPUCommandEncoderImpl>

public typealias WGPUComputePassEncoder = Pointer<WGPUComputePassEncoderImpl>

public typealias WGPUComputePipeline = Pointer<WGPUComputePipelineImpl>

public typealias WGPUDevice = Pointer<WGPUDeviceImpl>

public typealias WGPUExternalTexture = Pointer<WGPUExternalTextureImpl>

public typealias WGPUInstance = Pointer<WGPUInstanceImpl>

public typealias WGPUPipelineLayout = Pointer<WGPUPipelineLayoutImpl>

public typealias WGPUQuerySet = Pointer<WGPUQuerySetImpl>

public typealias WGPUQueue = Pointer<WGPUQueueImpl>

public typealias WGPURenderBundle = Pointer<WGPURenderBundleImpl>

public typealias WGPURenderBundleEncoder = Pointer<WGPURenderBundleEncoderImpl>

public typealias WGPURenderPassEncoder = Pointer<WGPURenderPassEncoderImpl>

public typealias WGPURenderPipeline = Pointer<WGPURenderPipelineImpl>

public typealias WGPUSampler = Pointer<WGPUSamplerImpl>

public typealias WGPUShaderModule = Pointer<WGPUShaderModuleImpl>

public typealias WGPUSharedBufferMemory = Pointer<WGPUSharedBufferMemoryImpl>

public typealias WGPUSharedFence = Pointer<WGPUSharedFenceImpl>

public typealias WGPUSharedTextureMemory = Pointer<WGPUSharedTextureMemoryImpl>

public typealias WGPUSurface = Pointer<WGPUSurfaceImpl>

public typealias WGPUSwapChain = Pointer<WGPUSwapChainImpl>

public typealias WGPUTexture = Pointer<WGPUTextureImpl>

public typealias WGPUTextureView = Pointer<WGPUTextureViewImpl>

public typealias WGPUBufferUsageFlags = WGPUFlags

public typealias WGPUColorWriteMaskFlags = WGPUFlags

public typealias WGPUHeapPropertyFlags = WGPUFlags

public typealias WGPUMapModeFlags = WGPUFlags

public typealias WGPUShaderStageFlags = WGPUFlags

public typealias WGPUTextureUsageFlags = WGPUFlags

public typealias WGPUBufferMapCallback = Pointer<(
    status: WGPUBufferMapAsyncStatus,
    userdata: Pointer<Unit>
) -> Unit>

public typealias WGPUCallback = Pointer<(userdata: Pointer<Unit>) -> Unit>

public typealias WGPUCompilationInfoCallback = Pointer<(
    status: WGPUCompilationInfoRequestStatus,
    compilationInfo: Pointer<WGPUCompilationInfo>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateComputePipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPUComputePipeline,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateRenderPipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPURenderPipeline,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDawnLoadCacheDataFunction = Pointer<(
    key: Pointer<Unit>,
    keySize: ULong,
    `value`: Pointer<Unit>,
    valueSize: ULong,
    userdata: Pointer<Unit>,
) -> ULong>

public typealias WGPUDawnStoreCacheDataFunction = Pointer<(
    key: Pointer<Unit>,
    keySize: ULong,
    `value`: Pointer<Unit>,
    valueSize: ULong,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDeviceLostCallback = Pointer<(
    reason: WGPUDeviceLostReason,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDeviceLostCallbackNew = Pointer<(
    device: Pointer<WGPUDevice>,
    reason: WGPUDeviceLostReason,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUErrorCallback = Pointer<(
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPULoggingCallback = Pointer<(
    type: WGPULoggingType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUPopErrorScopeCallback = Pointer<(
    status: WGPUPopErrorScopeStatus,
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProc = Pointer<() -> Unit>

public typealias WGPUQueueWorkDoneCallback = Pointer<(
    status: WGPUQueueWorkDoneStatus,
    userdata: Pointer<Unit>
) -> Unit>

public typealias WGPURequestAdapterCallback = Pointer<(
    status: WGPURequestAdapterStatus,
    adapter: WGPUAdapter,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestDeviceCallback = Pointer<(
    status: WGPURequestDeviceStatus,
    device: WGPUDevice,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUCompilationInfoCallback2 = Pointer<(
    status: WGPUCompilationInfoRequestStatus,
    compilationInfo: Pointer<WGPUCompilationInfo>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateComputePipelineAsyncCallback2 = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPUComputePipeline,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateRenderPipelineAsyncCallback2 = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPURenderPipeline,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUPopErrorScopeCallback2 = Pointer<(
    status: WGPUPopErrorScopeStatus,
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUQueueWorkDoneCallback2 = Pointer<(
    status: WGPUQueueWorkDoneStatus,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestAdapterCallback2 = Pointer<(
    status: WGPURequestAdapterStatus,
    adapter: WGPUAdapter,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestDeviceCallback2 = Pointer<(
    status: WGPURequestDeviceStatus,
    device: WGPUDevice,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>