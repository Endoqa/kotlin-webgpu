// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

public typealias int32_t = Int

public typealias uint8_t = UByte

public typealias uint16_t = UShort

public typealias uint32_t = UInt

public typealias uint64_t = ULong

public typealias WGPUFlags = uint32_t

public typealias WGPUBool = uint32_t

public typealias WGPUAdapter = Pointer<WGPUAdapterImpl>

public typealias WGPUBindGroup = Pointer<WGPUBindGroupImpl>

public typealias WGPUBindGroupLayout = Pointer<WGPUBindGroupLayoutImpl>

public typealias WGPUBuffer = Pointer<WGPUBufferImpl>

public typealias WGPUCommandBuffer = Pointer<WGPUCommandBufferImpl>

public typealias WGPUCommandEncoder = Pointer<WGPUCommandEncoderImpl>

public typealias WGPUComputePassEncoder = Pointer<WGPUComputePassEncoderImpl>

public typealias WGPUComputePipeline = Pointer<WGPUComputePipelineImpl>

public typealias WGPUDevice = Pointer<WGPUDeviceImpl>

public typealias WGPUExternalTexture = Pointer<WGPUExternalTextureImpl>

public typealias WGPUInstance = Pointer<WGPUInstanceImpl>

public typealias WGPUPipelineLayout = Pointer<WGPUPipelineLayoutImpl>

public typealias WGPUQuerySet = Pointer<WGPUQuerySetImpl>

public typealias WGPUQueue = Pointer<WGPUQueueImpl>

public typealias WGPURenderBundle = Pointer<WGPURenderBundleImpl>

public typealias WGPURenderBundleEncoder = Pointer<WGPURenderBundleEncoderImpl>

public typealias WGPURenderPassEncoder = Pointer<WGPURenderPassEncoderImpl>

public typealias WGPURenderPipeline = Pointer<WGPURenderPipelineImpl>

public typealias WGPUSampler = Pointer<WGPUSamplerImpl>

public typealias WGPUShaderModule = Pointer<WGPUShaderModuleImpl>

public typealias WGPUSharedBufferMemory = Pointer<WGPUSharedBufferMemoryImpl>

public typealias WGPUSharedFence = Pointer<WGPUSharedFenceImpl>

public typealias WGPUSharedTextureMemory = Pointer<WGPUSharedTextureMemoryImpl>

public typealias WGPUSurface = Pointer<WGPUSurfaceImpl>

public typealias WGPUSwapChain = Pointer<WGPUSwapChainImpl>

public typealias WGPUTexture = Pointer<WGPUTextureImpl>

public typealias WGPUTextureView = Pointer<WGPUTextureViewImpl>

public typealias WGPUBufferUsageFlags = WGPUFlags

public typealias WGPUColorWriteMaskFlags = WGPUFlags

public typealias WGPUHeapPropertyFlags = WGPUFlags

public typealias WGPUMapModeFlags = WGPUFlags

public typealias WGPUShaderStageFlags = WGPUFlags

public typealias WGPUTextureUsageFlags = WGPUFlags

public typealias WGPUBufferMapCallback = Pointer<(
    status: WGPUBufferMapAsyncStatus,
    userdata: Pointer<Unit>
) -> Unit>

public typealias WGPUCallback = Pointer<(userdata: Pointer<Unit>) -> Unit>

public typealias WGPUCompilationInfoCallback = Pointer<(
    status: WGPUCompilationInfoRequestStatus,
    compilationInfo: Pointer<WGPUCompilationInfo>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateComputePipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPUComputePipeline,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateRenderPipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPURenderPipeline,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDawnLoadCacheDataFunction = Pointer<(
    key: Pointer<Unit>,
    keySize: ULong,
    `value`: Pointer<Unit>,
    valueSize: ULong,
    userdata: Pointer<Unit>,
) -> ULong>

public typealias WGPUDawnStoreCacheDataFunction = Pointer<(
    key: Pointer<Unit>,
    keySize: ULong,
    `value`: Pointer<Unit>,
    valueSize: ULong,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDeviceLostCallback = Pointer<(
    reason: WGPUDeviceLostReason,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUDeviceLostCallbackNew = Pointer<(
    device: Pointer<WGPUDevice>,
    reason: WGPUDeviceLostReason,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUErrorCallback = Pointer<(
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPULoggingCallback = Pointer<(
    type: WGPULoggingType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUPopErrorScopeCallback = Pointer<(
    status: WGPUPopErrorScopeStatus,
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProc = Pointer<() -> Unit>

public typealias WGPUQueueWorkDoneCallback = Pointer<(
    status: WGPUQueueWorkDoneStatus,
    userdata: Pointer<Unit>
) -> Unit>

public typealias WGPURequestAdapterCallback = Pointer<(
    status: WGPURequestAdapterStatus,
    adapter: WGPUAdapter,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestDeviceCallback = Pointer<(
    status: WGPURequestDeviceStatus,
    device: WGPUDevice,
    message: Pointer<Byte>,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUBufferMapCallback2 = Pointer<(
    status: WGPUMapAsyncStatus,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCompilationInfoCallback2 = Pointer<(
    status: WGPUCompilationInfoRequestStatus,
    compilationInfo: Pointer<WGPUCompilationInfo>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateComputePipelineAsyncCallback2 = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPUComputePipeline,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateRenderPipelineAsyncCallback2 = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPURenderPipeline,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUPopErrorScopeCallback2 = Pointer<(
    status: WGPUPopErrorScopeStatus,
    type: WGPUErrorType,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUQueueWorkDoneCallback2 = Pointer<(
    status: WGPUQueueWorkDoneStatus,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestAdapterCallback2 = Pointer<(
    status: WGPURequestAdapterStatus,
    adapter: WGPUAdapter,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestDeviceCallback2 = Pointer<(
    status: WGPURequestDeviceStatus,
    device: WGPUDevice,
    message: Pointer<Byte>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcAdapterInfoFreeMembers = Pointer<(`value`: WGPUAdapterInfo) -> Unit>

public typealias WGPUProcAdapterPropertiesFreeMembers =
        Pointer<(`value`: WGPUAdapterProperties) -> Unit>

public typealias WGPUProcAdapterPropertiesMemoryHeapsFreeMembers =
        Pointer<(`value`: WGPUAdapterPropertiesMemoryHeaps) -> Unit>

public typealias WGPUProcCreateInstance =
        Pointer<(descriptor: Pointer<WGPUInstanceDescriptor>) -> WGPUInstance>

public typealias WGPUProcDrmFormatCapabilitiesFreeMembers =
        Pointer<(`value`: WGPUDrmFormatCapabilities) -> Unit>

public typealias WGPUProcGetInstanceFeatures =
        Pointer<(features: Pointer<WGPUInstanceFeatures>) -> WGPUStatus>

public typealias WGPUProcGetProcAddress = Pointer<(
    device: WGPUDevice,
    procName: Pointer<Byte>
) -> WGPUProc>

public typealias WGPUProcSharedBufferMemoryEndAccessStateFreeMembers =
        Pointer<(`value`: WGPUSharedBufferMemoryEndAccessState) -> Unit>

public typealias WGPUProcSharedTextureMemoryEndAccessStateFreeMembers =
        Pointer<(`value`: WGPUSharedTextureMemoryEndAccessState) -> Unit>

public typealias WGPUProcSurfaceCapabilitiesFreeMembers =
        Pointer<(`value`: WGPUSurfaceCapabilities) -> Unit>

public typealias WGPUProcAdapterCreateDevice = Pointer<(
    adapter: WGPUAdapter,
    descriptor: Pointer<WGPUDeviceDescriptor>
) -> WGPUDevice>

public typealias WGPUProcAdapterEnumerateFeatures = Pointer<(
    adapter: WGPUAdapter,
    features: Pointer<WGPUFeatureName>
) -> ULong>

public typealias WGPUProcAdapterGetFormatCapabilities = Pointer<(
    adapter: WGPUAdapter,
    format: WGPUTextureFormat,
    capabilities: Pointer<WGPUFormatCapabilities>,
) -> WGPUStatus>

public typealias WGPUProcAdapterGetInfo = Pointer<(
    adapter: WGPUAdapter,
    info: Pointer<WGPUAdapterInfo>
) -> WGPUStatus>

public typealias WGPUProcAdapterGetInstance = Pointer<(adapter: WGPUAdapter) -> WGPUInstance>

public typealias WGPUProcAdapterGetLimits = Pointer<(
    adapter: WGPUAdapter,
    limits: Pointer<WGPUSupportedLimits>
) -> WGPUStatus>

public typealias WGPUProcAdapterGetProperties = Pointer<(
    adapter: WGPUAdapter,
    properties: Pointer<WGPUAdapterProperties>
) -> WGPUStatus>

public typealias WGPUProcAdapterHasFeature = Pointer<(
    adapter: WGPUAdapter,
    feature: WGPUFeatureName
) -> WGPUBool>

public typealias WGPUProcAdapterRequestDevice = Pointer<(
    adapter: WGPUAdapter,
    descriptor: Pointer<WGPUDeviceDescriptor>,
    callback: WGPURequestDeviceCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcAdapterRequestDevice2 = Pointer<(
    adapter: WGPUAdapter,
    options: Pointer<WGPUDeviceDescriptor>,
    callbackInfo: WGPURequestDeviceCallbackInfo2,
) -> WGPUFuture>

public typealias WGPUProcAdapterRequestDeviceF = Pointer<(
    adapter: WGPUAdapter,
    options: Pointer<WGPUDeviceDescriptor>,
    callbackInfo: WGPURequestDeviceCallbackInfo,
) -> WGPUFuture>

public typealias WGPUProcAdapterAddRef = Pointer<(adapter: WGPUAdapter) -> Unit>

public typealias WGPUProcAdapterRelease = Pointer<(adapter: WGPUAdapter) -> Unit>

public typealias WGPUProcBindGroupSetLabel = Pointer<(
    bindGroup: WGPUBindGroup,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcBindGroupAddRef = Pointer<(bindGroup: WGPUBindGroup) -> Unit>

public typealias WGPUProcBindGroupRelease = Pointer<(bindGroup: WGPUBindGroup) -> Unit>

public typealias WGPUProcBindGroupLayoutSetLabel = Pointer<(
    bindGroupLayout: WGPUBindGroupLayout,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcBindGroupLayoutAddRef =
        Pointer<(bindGroupLayout: WGPUBindGroupLayout) -> Unit>

public typealias WGPUProcBindGroupLayoutRelease =
        Pointer<(bindGroupLayout: WGPUBindGroupLayout) -> Unit>

public typealias WGPUProcBufferDestroy = Pointer<(buffer: WGPUBuffer) -> Unit>

public typealias WGPUProcBufferGetConstMappedRange = Pointer<(
    buffer: WGPUBuffer,
    offset: ULong,
    size: ULong,
) -> Pointer<Unit>>

public typealias WGPUProcBufferGetMapState = Pointer<(buffer: WGPUBuffer) -> WGPUBufferMapState>

public typealias WGPUProcBufferGetMappedRange = Pointer<(
    buffer: WGPUBuffer,
    offset: ULong,
    size: ULong,
) -> Pointer<Unit>>

public typealias WGPUProcBufferGetSize = Pointer<(buffer: WGPUBuffer) -> uint64_t>

public typealias WGPUProcBufferGetUsage = Pointer<(buffer: WGPUBuffer) -> WGPUBufferUsageFlags>

public typealias WGPUProcBufferMapAsync = Pointer<(
    buffer: WGPUBuffer,
    mode: WGPUMapModeFlags,
    offset: ULong,
    size: ULong,
    callback: WGPUBufferMapCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcBufferMapAsync2 = Pointer<(
    buffer: WGPUBuffer,
    mode: WGPUMapModeFlags,
    offset: ULong,
    size: ULong,
    callbackInfo: WGPUBufferMapCallbackInfo2,
) -> WGPUFuture>

public typealias WGPUProcBufferMapAsyncF = Pointer<(
    buffer: WGPUBuffer,
    mode: WGPUMapModeFlags,
    offset: ULong,
    size: ULong,
    callbackInfo: WGPUBufferMapCallbackInfo,
) -> WGPUFuture>

public typealias WGPUProcBufferSetLabel = Pointer<(
    buffer: WGPUBuffer,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcBufferUnmap = Pointer<(buffer: WGPUBuffer) -> Unit>

public typealias WGPUProcBufferAddRef = Pointer<(buffer: WGPUBuffer) -> Unit>

public typealias WGPUProcBufferRelease = Pointer<(buffer: WGPUBuffer) -> Unit>

public typealias WGPUProcCommandBufferSetLabel = Pointer<(
    commandBuffer: WGPUCommandBuffer,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcCommandBufferAddRef = Pointer<(commandBuffer: WGPUCommandBuffer) -> Unit>

public typealias WGPUProcCommandBufferRelease = Pointer<(commandBuffer: WGPUCommandBuffer) -> Unit>

public typealias WGPUProcCommandEncoderBeginComputePass =
        Pointer<(
            commandEncoder: WGPUCommandEncoder,
            descriptor: Pointer<WGPUComputePassDescriptor>
        ) -> WGPUComputePassEncoder>

public typealias WGPUProcCommandEncoderBeginRenderPass =
        Pointer<(
            commandEncoder: WGPUCommandEncoder,
            descriptor: Pointer<WGPURenderPassDescriptor>
        ) -> WGPURenderPassEncoder>

public typealias WGPUProcCommandEncoderClearBuffer = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    buffer: WGPUBuffer,
    offset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcCommandEncoderCopyBufferToBuffer = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    source: WGPUBuffer,
    sourceOffset: uint64_t,
    destination: WGPUBuffer,
    destinationOffset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcCommandEncoderCopyBufferToTexture = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    source: Pointer<WGPUImageCopyBuffer>,
    destination: Pointer<WGPUImageCopyTexture>,
    copySize: Pointer<WGPUExtent3D>,
) -> Unit>

public typealias WGPUProcCommandEncoderCopyTextureToBuffer = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    source: Pointer<WGPUImageCopyTexture>,
    destination: Pointer<WGPUImageCopyBuffer>,
    copySize: Pointer<WGPUExtent3D>,
) -> Unit>

public typealias WGPUProcCommandEncoderCopyTextureToTexture = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    source: Pointer<WGPUImageCopyTexture>,
    destination: Pointer<WGPUImageCopyTexture>,
    copySize: Pointer<WGPUExtent3D>,
) -> Unit>

public typealias WGPUProcCommandEncoderFinish = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    descriptor: Pointer<WGPUCommandBufferDescriptor>
) -> WGPUCommandBuffer>

public typealias WGPUProcCommandEncoderInjectValidationError =
        Pointer<(commandEncoder: WGPUCommandEncoder, message: Pointer<Byte>) -> Unit>

public typealias WGPUProcCommandEncoderInsertDebugMarker =
        Pointer<(commandEncoder: WGPUCommandEncoder, markerLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcCommandEncoderPopDebugGroup =
        Pointer<(commandEncoder: WGPUCommandEncoder) -> Unit>

public typealias WGPUProcCommandEncoderPushDebugGroup = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    groupLabel: Pointer<Byte>
) -> Unit>

public typealias WGPUProcCommandEncoderResolveQuerySet = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    querySet: WGPUQuerySet,
    firstQuery: uint32_t,
    queryCount: uint32_t,
    destination: WGPUBuffer,
    destinationOffset: uint64_t,
) -> Unit>

public typealias WGPUProcCommandEncoderSetLabel = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcCommandEncoderWriteBuffer = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    buffer: WGPUBuffer,
    bufferOffset: uint64_t,
    `data`: Pointer<uint8_t>,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcCommandEncoderWriteTimestamp = Pointer<(
    commandEncoder: WGPUCommandEncoder,
    querySet: WGPUQuerySet,
    queryIndex: uint32_t,
) -> Unit>

public typealias WGPUProcCommandEncoderAddRef =
        Pointer<(commandEncoder: WGPUCommandEncoder) -> Unit>

public typealias WGPUProcCommandEncoderRelease =
        Pointer<(commandEncoder: WGPUCommandEncoder) -> Unit>

public typealias WGPUProcComputePassEncoderDispatchWorkgroups = Pointer<(
    computePassEncoder: WGPUComputePassEncoder,
    workgroupCountX: uint32_t,
    workgroupCountY: uint32_t,
    workgroupCountZ: uint32_t,
) -> Unit>

public typealias WGPUProcComputePassEncoderDispatchWorkgroupsIndirect = Pointer<(
    computePassEncoder: WGPUComputePassEncoder,
    indirectBuffer: WGPUBuffer,
    indirectOffset: uint64_t,
) -> Unit>

public typealias WGPUProcComputePassEncoderEnd =
        Pointer<(computePassEncoder: WGPUComputePassEncoder) -> Unit>

public typealias WGPUProcComputePassEncoderInsertDebugMarker =
        Pointer<(computePassEncoder: WGPUComputePassEncoder, markerLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcComputePassEncoderPopDebugGroup =
        Pointer<(computePassEncoder: WGPUComputePassEncoder) -> Unit>

public typealias WGPUProcComputePassEncoderPushDebugGroup =
        Pointer<(computePassEncoder: WGPUComputePassEncoder, groupLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcComputePassEncoderSetBindGroup = Pointer<(
    computePassEncoder: WGPUComputePassEncoder,
    groupIndex: uint32_t,
    group: WGPUBindGroup,
    dynamicOffsetCount: ULong,
    dynamicOffsets: Pointer<uint32_t>,
) -> Unit>

public typealias WGPUProcComputePassEncoderSetLabel =
        Pointer<(computePassEncoder: WGPUComputePassEncoder, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcComputePassEncoderSetPipeline =
        Pointer<(computePassEncoder: WGPUComputePassEncoder, pipeline: WGPUComputePipeline) -> Unit>

public typealias WGPUProcComputePassEncoderWriteTimestamp = Pointer<(
    computePassEncoder: WGPUComputePassEncoder,
    querySet: WGPUQuerySet,
    queryIndex: uint32_t,
) -> Unit>

public typealias WGPUProcComputePassEncoderAddRef =
        Pointer<(computePassEncoder: WGPUComputePassEncoder) -> Unit>

public typealias WGPUProcComputePassEncoderRelease =
        Pointer<(computePassEncoder: WGPUComputePassEncoder) -> Unit>

public typealias WGPUProcComputePipelineGetBindGroupLayout =
        Pointer<(computePipeline: WGPUComputePipeline, groupIndex: uint32_t) -> WGPUBindGroupLayout>

public typealias WGPUProcComputePipelineSetLabel = Pointer<(
    computePipeline: WGPUComputePipeline,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcComputePipelineAddRef =
        Pointer<(computePipeline: WGPUComputePipeline) -> Unit>

public typealias WGPUProcComputePipelineRelease =
        Pointer<(computePipeline: WGPUComputePipeline) -> Unit>

public typealias WGPUProcDeviceCreateBindGroup = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUBindGroupDescriptor>
) -> WGPUBindGroup>

public typealias WGPUProcDeviceCreateBindGroupLayout = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUBindGroupLayoutDescriptor>
) -> WGPUBindGroupLayout>

public typealias WGPUProcDeviceCreateBuffer = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUBufferDescriptor>
) -> WGPUBuffer>

public typealias WGPUProcDeviceCreateCommandEncoder = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUCommandEncoderDescriptor>
) -> WGPUCommandEncoder>

public typealias WGPUProcDeviceCreateComputePipeline = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUComputePipelineDescriptor>
) -> WGPUComputePipeline>

public typealias WGPUProcDeviceCreateComputePipelineAsync = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUComputePipelineDescriptor>,
    callback: WGPUCreateComputePipelineAsyncCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDeviceCreateComputePipelineAsync2 = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUComputePipelineDescriptor>,
    callbackInfo: WGPUCreateComputePipelineAsyncCallbackInfo2,
) -> WGPUFuture>

public typealias WGPUProcDeviceCreateComputePipelineAsyncF = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUComputePipelineDescriptor>,
    callbackInfo: WGPUCreateComputePipelineAsyncCallbackInfo,
) -> WGPUFuture>

public typealias WGPUProcDeviceCreateErrorBuffer = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUBufferDescriptor>
) -> WGPUBuffer>

public typealias WGPUProcDeviceCreateErrorExternalTexture =
        Pointer<(device: WGPUDevice) -> WGPUExternalTexture>

public typealias WGPUProcDeviceCreateErrorShaderModule = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUShaderModuleDescriptor>,
    errorMessage: Pointer<Byte>,
) -> WGPUShaderModule>

public typealias WGPUProcDeviceCreateErrorTexture = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUTextureDescriptor>
) -> WGPUTexture>

public typealias WGPUProcDeviceCreateExternalTexture = Pointer<(
    device: WGPUDevice,
    externalTextureDescriptor: Pointer<WGPUExternalTextureDescriptor>
) -> WGPUExternalTexture>

public typealias WGPUProcDeviceCreatePipelineLayout = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUPipelineLayoutDescriptor>
) -> WGPUPipelineLayout>

public typealias WGPUProcDeviceCreateQuerySet = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUQuerySetDescriptor>
) -> WGPUQuerySet>

public typealias WGPUProcDeviceCreateRenderBundleEncoder = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPURenderBundleEncoderDescriptor>
) -> WGPURenderBundleEncoder>

public typealias WGPUProcDeviceCreateRenderPipeline = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPURenderPipelineDescriptor>
) -> WGPURenderPipeline>

public typealias WGPUProcDeviceCreateRenderPipelineAsync = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPURenderPipelineDescriptor>,
    callback: WGPUCreateRenderPipelineAsyncCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDeviceCreateRenderPipelineAsync2 = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPURenderPipelineDescriptor>,
    callbackInfo: WGPUCreateRenderPipelineAsyncCallbackInfo2,
) -> WGPUFuture>

public typealias WGPUProcDeviceCreateRenderPipelineAsyncF = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPURenderPipelineDescriptor>,
    callbackInfo: WGPUCreateRenderPipelineAsyncCallbackInfo,
) -> WGPUFuture>

public typealias WGPUProcDeviceCreateSampler = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUSamplerDescriptor>
) -> WGPUSampler>

public typealias WGPUProcDeviceCreateShaderModule = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUShaderModuleDescriptor>
) -> WGPUShaderModule>

public typealias WGPUProcDeviceCreateSwapChain = Pointer<(
    device: WGPUDevice,
    surface: WGPUSurface,
    descriptor: Pointer<WGPUSwapChainDescriptor>,
) -> WGPUSwapChain>

public typealias WGPUProcDeviceCreateTexture = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUTextureDescriptor>
) -> WGPUTexture>

public typealias WGPUProcDeviceDestroy = Pointer<(device: WGPUDevice) -> Unit>

public typealias WGPUProcDeviceEnumerateFeatures = Pointer<(
    device: WGPUDevice,
    features: Pointer<WGPUFeatureName>
) -> ULong>

public typealias WGPUProcDeviceForceLoss = Pointer<(
    device: WGPUDevice,
    type: WGPUDeviceLostReason,
    message: Pointer<Byte>,
) -> Unit>

public typealias WGPUProcDeviceGetAHardwareBufferProperties = Pointer<(
    device: WGPUDevice,
    handle: Pointer<Unit>,
    properties: Pointer<WGPUAHardwareBufferProperties>,
) -> WGPUStatus>

public typealias WGPUProcDeviceGetAdapter = Pointer<(device: WGPUDevice) -> WGPUAdapter>

public typealias WGPUProcDeviceGetLimits = Pointer<(
    device: WGPUDevice,
    limits: Pointer<WGPUSupportedLimits>
) -> WGPUStatus>

public typealias WGPUProcDeviceGetQueue = Pointer<(device: WGPUDevice) -> WGPUQueue>

public typealias WGPUProcDeviceGetSupportedSurfaceUsage = Pointer<(
    device: WGPUDevice,
    surface: WGPUSurface
) -> WGPUTextureUsageFlags>

public typealias WGPUProcDeviceHasFeature = Pointer<(
    device: WGPUDevice,
    feature: WGPUFeatureName
) -> WGPUBool>

public typealias WGPUProcDeviceImportSharedBufferMemory = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUSharedBufferMemoryDescriptor>
) -> WGPUSharedBufferMemory>

public typealias WGPUProcDeviceImportSharedFence = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUSharedFenceDescriptor>
) -> WGPUSharedFence>

public typealias WGPUProcDeviceImportSharedTextureMemory = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUSharedTextureMemoryDescriptor>
) -> WGPUSharedTextureMemory>

public typealias WGPUProcDeviceInjectError = Pointer<(
    device: WGPUDevice,
    type: WGPUErrorType,
    message: Pointer<Byte>,
) -> Unit>

public typealias WGPUProcDevicePopErrorScope = Pointer<(
    device: WGPUDevice,
    oldCallback: WGPUErrorCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDevicePopErrorScope2 = Pointer<(
    device: WGPUDevice,
    callbackInfo: WGPUPopErrorScopeCallbackInfo2
) -> WGPUFuture>

public typealias WGPUProcDevicePopErrorScopeF = Pointer<(
    device: WGPUDevice,
    callbackInfo: WGPUPopErrorScopeCallbackInfo
) -> WGPUFuture>

public typealias WGPUProcDevicePushErrorScope = Pointer<(
    device: WGPUDevice,
    filter: WGPUErrorFilter
) -> Unit>

public typealias WGPUProcDeviceSetDeviceLostCallback = Pointer<(
    device: WGPUDevice,
    callback: WGPUDeviceLostCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDeviceSetLabel = Pointer<(
    device: WGPUDevice,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcDeviceSetLoggingCallback = Pointer<(
    device: WGPUDevice,
    callback: WGPULoggingCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDeviceSetUncapturedErrorCallback = Pointer<(
    device: WGPUDevice,
    callback: WGPUErrorCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcDeviceTick = Pointer<(device: WGPUDevice) -> Unit>

public typealias WGPUProcDeviceValidateTextureDescriptor = Pointer<(
    device: WGPUDevice,
    descriptor: Pointer<WGPUTextureDescriptor>
) -> Unit>

public typealias WGPUProcDeviceAddRef = Pointer<(device: WGPUDevice) -> Unit>

public typealias WGPUProcDeviceRelease = Pointer<(device: WGPUDevice) -> Unit>

public typealias WGPUProcExternalTextureDestroy =
        Pointer<(externalTexture: WGPUExternalTexture) -> Unit>

public typealias WGPUProcExternalTextureExpire =
        Pointer<(externalTexture: WGPUExternalTexture) -> Unit>

public typealias WGPUProcExternalTextureRefresh =
        Pointer<(externalTexture: WGPUExternalTexture) -> Unit>

public typealias WGPUProcExternalTextureSetLabel = Pointer<(
    externalTexture: WGPUExternalTexture,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcExternalTextureAddRef =
        Pointer<(externalTexture: WGPUExternalTexture) -> Unit>

public typealias WGPUProcExternalTextureRelease =
        Pointer<(externalTexture: WGPUExternalTexture) -> Unit>

public typealias WGPUProcInstanceCreateSurface = Pointer<(
    instance: WGPUInstance,
    descriptor: Pointer<WGPUSurfaceDescriptor>
) -> WGPUSurface>

public typealias WGPUProcInstanceEnumerateWGSLLanguageFeatures = Pointer<(
    instance: WGPUInstance,
    features: Pointer<WGPUWGSLFeatureName>
) -> ULong>

public typealias WGPUProcInstanceHasWGSLLanguageFeature = Pointer<(
    instance: WGPUInstance,
    feature: WGPUWGSLFeatureName
) -> WGPUBool>

public typealias WGPUProcInstanceProcessEvents = Pointer<(instance: WGPUInstance) -> Unit>

public typealias WGPUProcInstanceRequestAdapter = Pointer<(
    instance: WGPUInstance,
    options: Pointer<WGPURequestAdapterOptions>,
    callback: WGPURequestAdapterCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcInstanceRequestAdapter2 = Pointer<(
    instance: WGPUInstance,
    options: Pointer<WGPURequestAdapterOptions>,
    callbackInfo: WGPURequestAdapterCallbackInfo2,
) -> WGPUFuture>

public typealias WGPUProcInstanceRequestAdapterF = Pointer<(
    instance: WGPUInstance,
    options: Pointer<WGPURequestAdapterOptions>,
    callbackInfo: WGPURequestAdapterCallbackInfo,
) -> WGPUFuture>

public typealias WGPUProcInstanceWaitAny = Pointer<(
    instance: WGPUInstance,
    futureCount: ULong,
    futures: Pointer<WGPUFutureWaitInfo>,
    timeoutNS: uint64_t,
) -> WGPUWaitStatus>

public typealias WGPUProcInstanceAddRef = Pointer<(instance: WGPUInstance) -> Unit>

public typealias WGPUProcInstanceRelease = Pointer<(instance: WGPUInstance) -> Unit>

public typealias WGPUProcPipelineLayoutSetLabel = Pointer<(
    pipelineLayout: WGPUPipelineLayout,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcPipelineLayoutAddRef =
        Pointer<(pipelineLayout: WGPUPipelineLayout) -> Unit>

public typealias WGPUProcPipelineLayoutRelease =
        Pointer<(pipelineLayout: WGPUPipelineLayout) -> Unit>

public typealias WGPUProcQuerySetDestroy = Pointer<(querySet: WGPUQuerySet) -> Unit>

public typealias WGPUProcQuerySetGetCount = Pointer<(querySet: WGPUQuerySet) -> uint32_t>

public typealias WGPUProcQuerySetGetType = Pointer<(querySet: WGPUQuerySet) -> WGPUQueryType>

public typealias WGPUProcQuerySetSetLabel = Pointer<(
    querySet: WGPUQuerySet,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcQuerySetAddRef = Pointer<(querySet: WGPUQuerySet) -> Unit>

public typealias WGPUProcQuerySetRelease = Pointer<(querySet: WGPUQuerySet) -> Unit>

public typealias WGPUProcQueueCopyExternalTextureForBrowser = Pointer<(
    queue: WGPUQueue,
    source: Pointer<WGPUImageCopyExternalTexture>,
    destination: Pointer<WGPUImageCopyTexture>,
    copySize: Pointer<WGPUExtent3D>,
    options: Pointer<WGPUCopyTextureForBrowserOptions>,
) -> Unit>

public typealias WGPUProcQueueCopyTextureForBrowser = Pointer<(
    queue: WGPUQueue,
    source: Pointer<WGPUImageCopyTexture>,
    destination: Pointer<WGPUImageCopyTexture>,
    copySize: Pointer<WGPUExtent3D>,
    options: Pointer<WGPUCopyTextureForBrowserOptions>,
) -> Unit>

public typealias WGPUProcQueueOnSubmittedWorkDone = Pointer<(
    queue: WGPUQueue,
    callback: WGPUQueueWorkDoneCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcQueueOnSubmittedWorkDone2 = Pointer<(
    queue: WGPUQueue,
    callbackInfo: WGPUQueueWorkDoneCallbackInfo2
) -> WGPUFuture>

public typealias WGPUProcQueueOnSubmittedWorkDoneF = Pointer<(
    queue: WGPUQueue,
    callbackInfo: WGPUQueueWorkDoneCallbackInfo
) -> WGPUFuture>

public typealias WGPUProcQueueSetLabel = Pointer<(queue: WGPUQueue, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcQueueSubmit = Pointer<(
    queue: WGPUQueue,
    commandCount: ULong,
    commands: Pointer<WGPUCommandBuffer>,
) -> Unit>

public typealias WGPUProcQueueWriteBuffer = Pointer<(
    queue: WGPUQueue,
    buffer: WGPUBuffer,
    bufferOffset: uint64_t,
    `data`: Pointer<Unit>,
    size: ULong,
) -> Unit>

public typealias WGPUProcQueueWriteTexture = Pointer<(
    queue: WGPUQueue,
    destination: Pointer<WGPUImageCopyTexture>,
    `data`: Pointer<Unit>,
    dataSize: ULong,
    dataLayout: Pointer<WGPUTextureDataLayout>,
    writeSize: Pointer<WGPUExtent3D>,
) -> Unit>

public typealias WGPUProcQueueAddRef = Pointer<(queue: WGPUQueue) -> Unit>

public typealias WGPUProcQueueRelease = Pointer<(queue: WGPUQueue) -> Unit>

public typealias WGPUProcRenderBundleSetLabel = Pointer<(
    renderBundle: WGPURenderBundle,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcRenderBundleAddRef = Pointer<(renderBundle: WGPURenderBundle) -> Unit>

public typealias WGPUProcRenderBundleRelease = Pointer<(renderBundle: WGPURenderBundle) -> Unit>

public typealias WGPUProcRenderBundleEncoderDraw = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    vertexCount: uint32_t,
    instanceCount: uint32_t,
    firstVertex: uint32_t,
    firstInstance: uint32_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderDrawIndexed = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    indexCount: uint32_t,
    instanceCount: uint32_t,
    firstIndex: uint32_t,
    baseVertex: int32_t,
    firstInstance: uint32_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderDrawIndexedIndirect = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    indirectBuffer: WGPUBuffer,
    indirectOffset: uint64_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderDrawIndirect = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    indirectBuffer: WGPUBuffer,
    indirectOffset: uint64_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderFinish =
        Pointer<(
            renderBundleEncoder: WGPURenderBundleEncoder,
            descriptor: Pointer<WGPURenderBundleDescriptor>
        ) -> WGPURenderBundle>

public typealias WGPUProcRenderBundleEncoderInsertDebugMarker =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder, markerLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderBundleEncoderPopDebugGroup =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder) -> Unit>

public typealias WGPUProcRenderBundleEncoderPushDebugGroup =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder, groupLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderBundleEncoderSetBindGroup = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    groupIndex: uint32_t,
    group: WGPUBindGroup,
    dynamicOffsetCount: ULong,
    dynamicOffsets: Pointer<uint32_t>,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderSetIndexBuffer = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    buffer: WGPUBuffer,
    format: WGPUIndexFormat,
    offset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderSetLabel =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderBundleEncoderSetPipeline =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder, pipeline: WGPURenderPipeline) -> Unit>

public typealias WGPUProcRenderBundleEncoderSetVertexBuffer = Pointer<(
    renderBundleEncoder: WGPURenderBundleEncoder,
    slot: uint32_t,
    buffer: WGPUBuffer,
    offset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcRenderBundleEncoderAddRef =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder) -> Unit>

public typealias WGPUProcRenderBundleEncoderRelease =
        Pointer<(renderBundleEncoder: WGPURenderBundleEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderBeginOcclusionQuery =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, queryIndex: uint32_t) -> Unit>

public typealias WGPUProcRenderPassEncoderDraw = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    vertexCount: uint32_t,
    instanceCount: uint32_t,
    firstVertex: uint32_t,
    firstInstance: uint32_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderDrawIndexed = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    indexCount: uint32_t,
    instanceCount: uint32_t,
    firstIndex: uint32_t,
    baseVertex: int32_t,
    firstInstance: uint32_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderDrawIndexedIndirect = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    indirectBuffer: WGPUBuffer,
    indirectOffset: uint64_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderDrawIndirect = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    indirectBuffer: WGPUBuffer,
    indirectOffset: uint64_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderEnd =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderEndOcclusionQuery =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderExecuteBundles = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    bundleCount: ULong,
    bundles: Pointer<WGPURenderBundle>,
) -> Unit>

public typealias WGPUProcRenderPassEncoderInsertDebugMarker =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, markerLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderPassEncoderPixelLocalStorageBarrier =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderPopDebugGroup =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderPushDebugGroup =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, groupLabel: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderPassEncoderSetBindGroup = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    groupIndex: uint32_t,
    group: WGPUBindGroup,
    dynamicOffsetCount: ULong,
    dynamicOffsets: Pointer<uint32_t>,
) -> Unit>

public typealias WGPUProcRenderPassEncoderSetBlendConstant =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, color: Pointer<WGPUColor>) -> Unit>

public typealias WGPUProcRenderPassEncoderSetIndexBuffer = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    buffer: WGPUBuffer,
    format: WGPUIndexFormat,
    offset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderSetLabel =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcRenderPassEncoderSetPipeline =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, pipeline: WGPURenderPipeline) -> Unit>

public typealias WGPUProcRenderPassEncoderSetScissorRect = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    x: uint32_t,
    y: uint32_t,
    width: uint32_t,
    height: uint32_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderSetStencilReference =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder, reference: uint32_t) -> Unit>

public typealias WGPUProcRenderPassEncoderSetVertexBuffer = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    slot: uint32_t,
    buffer: WGPUBuffer,
    offset: uint64_t,
    size: uint64_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderSetViewport = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    x: Float,
    y: Float,
    width: Float,
    height: Float,
    minDepth: Float,
    maxDepth: Float,
) -> Unit>

public typealias WGPUProcRenderPassEncoderWriteTimestamp = Pointer<(
    renderPassEncoder: WGPURenderPassEncoder,
    querySet: WGPUQuerySet,
    queryIndex: uint32_t,
) -> Unit>

public typealias WGPUProcRenderPassEncoderAddRef =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPassEncoderRelease =
        Pointer<(renderPassEncoder: WGPURenderPassEncoder) -> Unit>

public typealias WGPUProcRenderPipelineGetBindGroupLayout =
        Pointer<(renderPipeline: WGPURenderPipeline, groupIndex: uint32_t) -> WGPUBindGroupLayout>

public typealias WGPUProcRenderPipelineSetLabel = Pointer<(
    renderPipeline: WGPURenderPipeline,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcRenderPipelineAddRef =
        Pointer<(renderPipeline: WGPURenderPipeline) -> Unit>

public typealias WGPUProcRenderPipelineRelease =
        Pointer<(renderPipeline: WGPURenderPipeline) -> Unit>

public typealias WGPUProcSamplerSetLabel = Pointer<(
    sampler: WGPUSampler,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcSamplerAddRef = Pointer<(sampler: WGPUSampler) -> Unit>

public typealias WGPUProcSamplerRelease = Pointer<(sampler: WGPUSampler) -> Unit>

public typealias WGPUProcShaderModuleGetCompilationInfo = Pointer<(
    shaderModule: WGPUShaderModule,
    callback: WGPUCompilationInfoCallback,
    userdata: Pointer<Unit>,
) -> Unit>

public typealias WGPUProcShaderModuleGetCompilationInfo2 = Pointer<(
    shaderModule: WGPUShaderModule,
    callbackInfo: WGPUCompilationInfoCallbackInfo2
) -> WGPUFuture>

public typealias WGPUProcShaderModuleGetCompilationInfoF = Pointer<(
    shaderModule: WGPUShaderModule,
    callbackInfo: WGPUCompilationInfoCallbackInfo
) -> WGPUFuture>

public typealias WGPUProcShaderModuleSetLabel = Pointer<(
    shaderModule: WGPUShaderModule,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcShaderModuleAddRef = Pointer<(shaderModule: WGPUShaderModule) -> Unit>

public typealias WGPUProcShaderModuleRelease = Pointer<(shaderModule: WGPUShaderModule) -> Unit>

public typealias WGPUProcSharedBufferMemoryBeginAccess = Pointer<(
    sharedBufferMemory: WGPUSharedBufferMemory,
    buffer: WGPUBuffer,
    descriptor: Pointer<WGPUSharedBufferMemoryBeginAccessDescriptor>,
) -> WGPUBool>

public typealias WGPUProcSharedBufferMemoryCreateBuffer =
        Pointer<(
            sharedBufferMemory: WGPUSharedBufferMemory,
            descriptor: Pointer<WGPUBufferDescriptor>
        ) -> WGPUBuffer>

public typealias WGPUProcSharedBufferMemoryEndAccess = Pointer<(
    sharedBufferMemory: WGPUSharedBufferMemory,
    buffer: WGPUBuffer,
    descriptor: Pointer<WGPUSharedBufferMemoryEndAccessState>,
) -> WGPUBool>

public typealias WGPUProcSharedBufferMemoryGetProperties =
        Pointer<(
            sharedBufferMemory: WGPUSharedBufferMemory,
            properties: Pointer<WGPUSharedBufferMemoryProperties>
        ) -> WGPUStatus>

public typealias WGPUProcSharedBufferMemoryIsDeviceLost =
        Pointer<(sharedBufferMemory: WGPUSharedBufferMemory) -> WGPUBool>

public typealias WGPUProcSharedBufferMemorySetLabel =
        Pointer<(sharedBufferMemory: WGPUSharedBufferMemory, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcSharedBufferMemoryAddRef =
        Pointer<(sharedBufferMemory: WGPUSharedBufferMemory) -> Unit>

public typealias WGPUProcSharedBufferMemoryRelease =
        Pointer<(sharedBufferMemory: WGPUSharedBufferMemory) -> Unit>

public typealias WGPUProcSharedFenceExportInfo = Pointer<(
    sharedFence: WGPUSharedFence,
    info: Pointer<WGPUSharedFenceExportInfo>
) -> Unit>

public typealias WGPUProcSharedFenceAddRef = Pointer<(sharedFence: WGPUSharedFence) -> Unit>

public typealias WGPUProcSharedFenceRelease = Pointer<(sharedFence: WGPUSharedFence) -> Unit>

public typealias WGPUProcSharedTextureMemoryBeginAccess = Pointer<(
    sharedTextureMemory: WGPUSharedTextureMemory,
    texture: WGPUTexture,
    descriptor: Pointer<WGPUSharedTextureMemoryBeginAccessDescriptor>,
) -> WGPUBool>

public typealias WGPUProcSharedTextureMemoryCreateTexture =
        Pointer<(
            sharedTextureMemory: WGPUSharedTextureMemory,
            descriptor: Pointer<WGPUTextureDescriptor>
        ) -> WGPUTexture>

public typealias WGPUProcSharedTextureMemoryEndAccess = Pointer<(
    sharedTextureMemory: WGPUSharedTextureMemory,
    texture: WGPUTexture,
    descriptor: Pointer<WGPUSharedTextureMemoryEndAccessState>,
) -> WGPUBool>

public typealias WGPUProcSharedTextureMemoryGetProperties =
        Pointer<(
            sharedTextureMemory: WGPUSharedTextureMemory,
            properties: Pointer<WGPUSharedTextureMemoryProperties>
        ) -> WGPUStatus>

public typealias WGPUProcSharedTextureMemoryIsDeviceLost =
        Pointer<(sharedTextureMemory: WGPUSharedTextureMemory) -> WGPUBool>

public typealias WGPUProcSharedTextureMemorySetLabel =
        Pointer<(sharedTextureMemory: WGPUSharedTextureMemory, label: Pointer<Byte>) -> Unit>

public typealias WGPUProcSharedTextureMemoryAddRef =
        Pointer<(sharedTextureMemory: WGPUSharedTextureMemory) -> Unit>

public typealias WGPUProcSharedTextureMemoryRelease =
        Pointer<(sharedTextureMemory: WGPUSharedTextureMemory) -> Unit>

public typealias WGPUProcSurfaceConfigure = Pointer<(
    surface: WGPUSurface,
    config: Pointer<WGPUSurfaceConfiguration>
) -> Unit>

public typealias WGPUProcSurfaceGetCapabilities = Pointer<(
    surface: WGPUSurface,
    adapter: WGPUAdapter,
    capabilities: Pointer<WGPUSurfaceCapabilities>,
) -> WGPUStatus>

public typealias WGPUProcSurfaceGetCurrentTexture = Pointer<(
    surface: WGPUSurface,
    surfaceTexture: Pointer<WGPUSurfaceTexture>
) -> Unit>

public typealias WGPUProcSurfaceGetPreferredFormat = Pointer<(
    surface: WGPUSurface,
    adapter: WGPUAdapter
) -> WGPUTextureFormat>

public typealias WGPUProcSurfacePresent = Pointer<(surface: WGPUSurface) -> Unit>

public typealias WGPUProcSurfaceUnconfigure = Pointer<(surface: WGPUSurface) -> Unit>

public typealias WGPUProcSurfaceAddRef = Pointer<(surface: WGPUSurface) -> Unit>

public typealias WGPUProcSurfaceRelease = Pointer<(surface: WGPUSurface) -> Unit>

public typealias WGPUProcSwapChainGetCurrentTexture =
        Pointer<(swapChain: WGPUSwapChain) -> WGPUTexture>

public typealias WGPUProcSwapChainGetCurrentTextureView =
        Pointer<(swapChain: WGPUSwapChain) -> WGPUTextureView>

public typealias WGPUProcSwapChainPresent = Pointer<(swapChain: WGPUSwapChain) -> Unit>

public typealias WGPUProcSwapChainAddRef = Pointer<(swapChain: WGPUSwapChain) -> Unit>

public typealias WGPUProcSwapChainRelease = Pointer<(swapChain: WGPUSwapChain) -> Unit>

public typealias WGPUProcTextureCreateErrorView = Pointer<(
    texture: WGPUTexture,
    descriptor: Pointer<WGPUTextureViewDescriptor>
) -> WGPUTextureView>

public typealias WGPUProcTextureCreateView = Pointer<(
    texture: WGPUTexture,
    descriptor: Pointer<WGPUTextureViewDescriptor>
) -> WGPUTextureView>

public typealias WGPUProcTextureDestroy = Pointer<(texture: WGPUTexture) -> Unit>

public typealias WGPUProcTextureGetDepthOrArrayLayers = Pointer<(texture: WGPUTexture) -> uint32_t>

public typealias WGPUProcTextureGetDimension =
        Pointer<(texture: WGPUTexture) -> WGPUTextureDimension>

public typealias WGPUProcTextureGetFormat = Pointer<(texture: WGPUTexture) -> WGPUTextureFormat>

public typealias WGPUProcTextureGetHeight = Pointer<(texture: WGPUTexture) -> uint32_t>

public typealias WGPUProcTextureGetMipLevelCount = Pointer<(texture: WGPUTexture) -> uint32_t>

public typealias WGPUProcTextureGetSampleCount = Pointer<(texture: WGPUTexture) -> uint32_t>

public typealias WGPUProcTextureGetUsage = Pointer<(texture: WGPUTexture) -> WGPUTextureUsageFlags>

public typealias WGPUProcTextureGetWidth = Pointer<(texture: WGPUTexture) -> uint32_t>

public typealias WGPUProcTextureSetLabel = Pointer<(
    texture: WGPUTexture,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcTextureAddRef = Pointer<(texture: WGPUTexture) -> Unit>

public typealias WGPUProcTextureRelease = Pointer<(texture: WGPUTexture) -> Unit>

public typealias WGPUProcTextureViewSetLabel = Pointer<(
    textureView: WGPUTextureView,
    label: Pointer<Byte>
) -> Unit>

public typealias WGPUProcTextureViewAddRef = Pointer<(textureView: WGPUTextureView) -> Unit>

public typealias WGPUProcTextureViewRelease = Pointer<(textureView: WGPUTextureView) -> Unit>
