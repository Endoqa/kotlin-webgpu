// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class WGPUTextureFormat(
    public val `value`: Int,
) {
    Undefined(0x00000000),
    R8Unorm(0x00000001),
    R8Snorm(0x00000002),
    R8Uint(0x00000003),
    R8Sint(0x00000004),
    R16Uint(0x00000005),
    R16Sint(0x00000006),
    R16Float(0x00000007),
    RG8Unorm(0x00000008),
    RG8Snorm(0x00000009),
    RG8Uint(0x0000000a),
    RG8Sint(0x0000000b),
    R32Float(0x0000000c),
    R32Uint(0x0000000d),
    R32Sint(0x0000000e),
    RG16Uint(0x0000000f),
    RG16Sint(0x00000010),
    RG16Float(0x00000011),
    RGBA8Unorm(0x00000012),
    RGBA8UnormSrgb(0x00000013),
    RGBA8Snorm(0x00000014),
    RGBA8Uint(0x00000015),
    RGBA8Sint(0x00000016),
    BGRA8Unorm(0x00000017),
    BGRA8UnormSrgb(0x00000018),
    RGB10A2Uint(0x00000019),
    RGB10A2Unorm(0x0000001a),
    RG11B10Ufloat(0x0000001b),
    RGB9E5Ufloat(0x0000001c),
    RG32Float(0x0000001d),
    RG32Uint(0x0000001e),
    RG32Sint(0x0000001f),
    RGBA16Uint(0x00000020),
    RGBA16Sint(0x00000021),
    RGBA16Float(0x00000022),
    RGBA32Float(0x00000023),
    RGBA32Uint(0x00000024),
    RGBA32Sint(0x00000025),
    Stencil8(0x00000026),
    Depth16Unorm(0x00000027),
    Depth24Plus(0x00000028),
    Depth24PlusStencil8(0x00000029),
    Depth32Float(0x0000002a),
    Depth32FloatStencil8(0x0000002b),
    BC1RGBAUnorm(0x0000002c),
    BC1RGBAUnormSrgb(0x0000002d),
    BC2RGBAUnorm(0x0000002e),
    BC2RGBAUnormSrgb(0x0000002f),
    BC3RGBAUnorm(0x00000030),
    BC3RGBAUnormSrgb(0x00000031),
    BC4RUnorm(0x00000032),
    BC4RSnorm(0x00000033),
    BC5RGUnorm(0x00000034),
    BC5RGSnorm(0x00000035),
    BC6HRGBUfloat(0x00000036),
    BC6HRGBFloat(0x00000037),
    BC7RGBAUnorm(0x00000038),
    BC7RGBAUnormSrgb(0x00000039),
    ETC2RGB8Unorm(0x0000003a),
    ETC2RGB8UnormSrgb(0x0000003b),
    ETC2RGB8A1Unorm(0x0000003c),
    ETC2RGB8A1UnormSrgb(0x0000003d),
    ETC2RGBA8Unorm(0x0000003e),
    ETC2RGBA8UnormSrgb(0x0000003f),
    EACR11Unorm(0x00000040),
    EACR11Snorm(0x00000041),
    EACRG11Unorm(0x00000042),
    EACRG11Snorm(0x00000043),
    ASTC4x4Unorm(0x00000044),
    ASTC4x4UnormSrgb(0x00000045),
    ASTC5x4Unorm(0x00000046),
    ASTC5x4UnormSrgb(0x00000047),
    ASTC5x5Unorm(0x00000048),
    ASTC5x5UnormSrgb(0x00000049),
    ASTC6x5Unorm(0x0000004a),
    ASTC6x5UnormSrgb(0x0000004b),
    ASTC6x6Unorm(0x0000004c),
    ASTC6x6UnormSrgb(0x0000004d),
    ASTC8x5Unorm(0x0000004e),
    ASTC8x5UnormSrgb(0x0000004f),
    ASTC8x6Unorm(0x00000050),
    ASTC8x6UnormSrgb(0x00000051),
    ASTC8x8Unorm(0x00000052),
    ASTC8x8UnormSrgb(0x00000053),
    ASTC10x5Unorm(0x00000054),
    ASTC10x5UnormSrgb(0x00000055),
    ASTC10x6Unorm(0x00000056),
    ASTC10x6UnormSrgb(0x00000057),
    ASTC10x8Unorm(0x00000058),
    ASTC10x8UnormSrgb(0x00000059),
    ASTC10x10Unorm(0x0000005a),
    ASTC10x10UnormSrgb(0x0000005b),
    ASTC12x10Unorm(0x0000005c),
    ASTC12x10UnormSrgb(0x0000005d),
    ASTC12x12Unorm(0x0000005e),
    ASTC12x12UnormSrgb(0x0000005f),
    R16Unorm(0x00000060),
    RG16Unorm(0x00000061),
    RGBA16Unorm(0x00000062),
    R16Snorm(0x00000063),
    RG16Snorm(0x00000064),
    RGBA16Snorm(0x00000065),
    R8BG8Biplanar420Unorm(0x00000066),
    R10X6BG10X6Biplanar420Unorm(0x00000067),
    R8BG8A8Triplanar420Unorm(0x00000068),
    R8BG8Biplanar422Unorm(0x00000069),
    R8BG8Biplanar444Unorm(0x0000006a),
    R10X6BG10X6Biplanar422Unorm(0x0000006b),
    R10X6BG10X6Biplanar444Unorm(0x0000006c),
    External(0x0000006d),
    Force32(0x7fffffff),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUTextureFormat::class.java,
            "fromInt",
            MethodType.methodType(WGPUTextureFormat::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUTextureFormat::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUTextureFormat = when (value) {
            0x00000000 -> Undefined
            0x00000001 -> R8Unorm
            0x00000002 -> R8Snorm
            0x00000003 -> R8Uint
            0x00000004 -> R8Sint
            0x00000005 -> R16Uint
            0x00000006 -> R16Sint
            0x00000007 -> R16Float
            0x00000008 -> RG8Unorm
            0x00000009 -> RG8Snorm
            0x0000000a -> RG8Uint
            0x0000000b -> RG8Sint
            0x0000000c -> R32Float
            0x0000000d -> R32Uint
            0x0000000e -> R32Sint
            0x0000000f -> RG16Uint
            0x00000010 -> RG16Sint
            0x00000011 -> RG16Float
            0x00000012 -> RGBA8Unorm
            0x00000013 -> RGBA8UnormSrgb
            0x00000014 -> RGBA8Snorm
            0x00000015 -> RGBA8Uint
            0x00000016 -> RGBA8Sint
            0x00000017 -> BGRA8Unorm
            0x00000018 -> BGRA8UnormSrgb
            0x00000019 -> RGB10A2Uint
            0x0000001a -> RGB10A2Unorm
            0x0000001b -> RG11B10Ufloat
            0x0000001c -> RGB9E5Ufloat
            0x0000001d -> RG32Float
            0x0000001e -> RG32Uint
            0x0000001f -> RG32Sint
            0x00000020 -> RGBA16Uint
            0x00000021 -> RGBA16Sint
            0x00000022 -> RGBA16Float
            0x00000023 -> RGBA32Float
            0x00000024 -> RGBA32Uint
            0x00000025 -> RGBA32Sint
            0x00000026 -> Stencil8
            0x00000027 -> Depth16Unorm
            0x00000028 -> Depth24Plus
            0x00000029 -> Depth24PlusStencil8
            0x0000002a -> Depth32Float
            0x0000002b -> Depth32FloatStencil8
            0x0000002c -> BC1RGBAUnorm
            0x0000002d -> BC1RGBAUnormSrgb
            0x0000002e -> BC2RGBAUnorm
            0x0000002f -> BC2RGBAUnormSrgb
            0x00000030 -> BC3RGBAUnorm
            0x00000031 -> BC3RGBAUnormSrgb
            0x00000032 -> BC4RUnorm
            0x00000033 -> BC4RSnorm
            0x00000034 -> BC5RGUnorm
            0x00000035 -> BC5RGSnorm
            0x00000036 -> BC6HRGBUfloat
            0x00000037 -> BC6HRGBFloat
            0x00000038 -> BC7RGBAUnorm
            0x00000039 -> BC7RGBAUnormSrgb
            0x0000003a -> ETC2RGB8Unorm
            0x0000003b -> ETC2RGB8UnormSrgb
            0x0000003c -> ETC2RGB8A1Unorm
            0x0000003d -> ETC2RGB8A1UnormSrgb
            0x0000003e -> ETC2RGBA8Unorm
            0x0000003f -> ETC2RGBA8UnormSrgb
            0x00000040 -> EACR11Unorm
            0x00000041 -> EACR11Snorm
            0x00000042 -> EACRG11Unorm
            0x00000043 -> EACRG11Snorm
            0x00000044 -> ASTC4x4Unorm
            0x00000045 -> ASTC4x4UnormSrgb
            0x00000046 -> ASTC5x4Unorm
            0x00000047 -> ASTC5x4UnormSrgb
            0x00000048 -> ASTC5x5Unorm
            0x00000049 -> ASTC5x5UnormSrgb
            0x0000004a -> ASTC6x5Unorm
            0x0000004b -> ASTC6x5UnormSrgb
            0x0000004c -> ASTC6x6Unorm
            0x0000004d -> ASTC6x6UnormSrgb
            0x0000004e -> ASTC8x5Unorm
            0x0000004f -> ASTC8x5UnormSrgb
            0x00000050 -> ASTC8x6Unorm
            0x00000051 -> ASTC8x6UnormSrgb
            0x00000052 -> ASTC8x8Unorm
            0x00000053 -> ASTC8x8UnormSrgb
            0x00000054 -> ASTC10x5Unorm
            0x00000055 -> ASTC10x5UnormSrgb
            0x00000056 -> ASTC10x6Unorm
            0x00000057 -> ASTC10x6UnormSrgb
            0x00000058 -> ASTC10x8Unorm
            0x00000059 -> ASTC10x8UnormSrgb
            0x0000005a -> ASTC10x10Unorm
            0x0000005b -> ASTC10x10UnormSrgb
            0x0000005c -> ASTC12x10Unorm
            0x0000005d -> ASTC12x10UnormSrgb
            0x0000005e -> ASTC12x12Unorm
            0x0000005f -> ASTC12x12UnormSrgb
            0x00000060 -> R16Unorm
            0x00000061 -> RG16Unorm
            0x00000062 -> RGBA16Unorm
            0x00000063 -> R16Snorm
            0x00000064 -> RG16Snorm
            0x00000065 -> RGBA16Snorm
            0x00000066 -> R8BG8Biplanar420Unorm
            0x00000067 -> R10X6BG10X6Biplanar420Unorm
            0x00000068 -> R8BG8A8Triplanar420Unorm
            0x00000069 -> R8BG8Biplanar422Unorm
            0x0000006a -> R8BG8Biplanar444Unorm
            0x0000006b -> R10X6BG10X6Biplanar422Unorm
            0x0000006c -> R10X6BG10X6Biplanar444Unorm
            0x0000006d -> External
            0x7fffffff -> Force32
            else -> error("enum not found")
        }
    }
}
