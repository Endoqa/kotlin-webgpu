// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Byte
import kotlin.Long
import kotlin.ULong
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPUStringView(
    public val `$mem`: MemorySegment,
) {
    public var `data`: Pointer<Byte>
        get() = WGPUStringView.dataHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUStringView.dataHandle.set(this.`$mem`, 0L, value)
        }

    public var length: ULong
        get() = (WGPUStringView.lengthHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            WGPUStringView.lengthHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUStringView.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("data"),
            ValueLayout.JAVA_LONG.withName("length"),
        ).withName("WGPUStringView")

        @JvmField
        public val dataHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("data"))

        @JvmField
        public val lengthHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("length"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUStringView =
            WGPUStringView(alloc.allocate(WGPUStringView.layout))
    }
}
