// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.DeviceLost
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.Error
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.Lost
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.OutOfMemory
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.Outdated
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.SuccessOptimal
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.SuccessSuboptimal
import webgpu.c.WGPUSurfaceGetCurrentTextureStatus.Timeout

public enum class WGPUSurfaceGetCurrentTextureStatus(
    public val `value`: Int,
) {
    SuccessOptimal(0x00000001),
    SuccessSuboptimal(0x00000002),
    Timeout(0x00000003),
    Outdated(0x00000004),
    Lost(0x00000005),
    OutOfMemory(0x00000006),
    DeviceLost(0x00000007),
    Error(0x00000008),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUSurfaceGetCurrentTextureStatus::class.java,
            "fromInt",
            MethodType.methodType(WGPUSurfaceGetCurrentTextureStatus::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUSurfaceGetCurrentTextureStatus::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUSurfaceGetCurrentTextureStatus = when (value) {
            SuccessOptimal.value -> SuccessOptimal
            SuccessSuboptimal.value -> SuccessSuboptimal
            Timeout.value -> Timeout
            Outdated.value -> Outdated
            Lost.value -> Lost
            OutOfMemory.value -> OutOfMemory
            DeviceLost.value -> DeviceLost
            Error.value -> Error
            else -> error("enum not found")
        }
    }
}
