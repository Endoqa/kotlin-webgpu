// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import webgpu.c.WGPUTextureSampleType.BindingNotUsed
import webgpu.c.WGPUTextureSampleType.Depth
import webgpu.c.WGPUTextureSampleType.Float
import webgpu.c.WGPUTextureSampleType.Sint
import webgpu.c.WGPUTextureSampleType.Uint
import webgpu.c.WGPUTextureSampleType.Undefined
import webgpu.c.WGPUTextureSampleType.UnfilterableFloat

public enum class WGPUTextureSampleType(
    public val `value`: Int,
) {
    BindingNotUsed(0x00000000),
    Undefined(0x00000001),
    Float(0x00000002),
    UnfilterableFloat(0x00000003),
    Depth(0x00000004),
    Sint(0x00000005),
    Uint(0x00000006),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUTextureSampleType::class.java,
            "fromInt",
            MethodType.methodType(WGPUTextureSampleType::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUTextureSampleType::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUTextureSampleType = when (value) {
            BindingNotUsed.value -> BindingNotUsed
            Undefined.value -> Undefined
            Float.value -> Float
            UnfilterableFloat.value -> UnfilterableFloat
            Depth.value -> Depth
            Sint.value -> Sint
            Uint.value -> Uint
            else -> error("enum not found")
        }
    }
}
