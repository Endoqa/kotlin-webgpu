// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Long
import kotlin.ULong
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPUProgrammableStageDescriptor(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStruct>
        get() = WGPUProgrammableStageDescriptor.nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUProgrammableStageDescriptor.nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var module: WGPUShaderModule
        get() = WGPUProgrammableStageDescriptor.moduleHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUProgrammableStageDescriptor.moduleHandle.set(this.`$mem`, 0L, value)
        }

    public var entryPoint: WGPUStringView
        get() = WGPUStringView(
            WGPUProgrammableStageDescriptor.entryPointHandle.invokeExact(
                this.`$mem`,
                0L
            ) as MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.entryPoint.`$mem`, 0L,
                WGPUStringView.layout.byteSize()
            )
        }

    public var constantCount: ULong
        get() = (WGPUProgrammableStageDescriptor.constantCountHandle.get(this.`$mem`, 0L) as
                Long).toULong()
        set(`value`) {
            WGPUProgrammableStageDescriptor.constantCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var constants: Pointer<WGPUConstantEntry>
        get() = WGPUProgrammableStageDescriptor.constantsHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUProgrammableStageDescriptor.constantsHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUProgrammableStageDescriptor.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            `$RuntimeHelper`.POINTER.withName("module"),
            WGPUStringView.layout.withName("entryPoint"),
            ValueLayout.JAVA_LONG.withName("constantCount"),
            `$RuntimeHelper`.POINTER.withName("constants"),
        ).withName("WGPUProgrammableStageDescriptor")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val moduleHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("module"))

        @JvmField
        public val entryPointHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("entryPoint"))

        @JvmField
        public val constantCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("constantCount"))

        @JvmField
        public val constantsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("constants"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUProgrammableStageDescriptor =
            WGPUProgrammableStageDescriptor(alloc.allocate(WGPUProgrammableStageDescriptor.layout))
    }
}
