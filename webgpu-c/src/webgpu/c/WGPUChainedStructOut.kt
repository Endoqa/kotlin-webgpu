// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUChainedStructOut(
    public val `$mem`: MemorySegment,
) {
    public var next: Pointer<WGPUChainedStructOut>
        get() = nextHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            nextHandle.set(this.`$mem`, 0L, value)
        }

    public var sType: WGPUSType
        get() = WGPUSType.fromInt(sTypeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            sTypeHandle.set(this.`$mem`, 0L, value.value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("next"),
            ValueLayout.JAVA_INT.withName("sType"),
            MemoryLayout.paddingLayout(4),
        ).withName("WGPUChainedStructOut")

        @JvmField
        public val nextHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("next"))

        @JvmField
        public val sTypeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("sType"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUChainedStructOut =
            WGPUChainedStructOut(alloc.allocate(layout))
    }
}
