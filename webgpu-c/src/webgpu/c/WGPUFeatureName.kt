// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import webgpu.c.WGPUFeatureName.BGRA8UnormStorage
import webgpu.c.WGPUFeatureName.ClipDistances
import webgpu.c.WGPUFeatureName.Depth32FloatStencil8
import webgpu.c.WGPUFeatureName.DepthClipControl
import webgpu.c.WGPUFeatureName.DualSourceBlending
import webgpu.c.WGPUFeatureName.Float32Blendable
import webgpu.c.WGPUFeatureName.Float32Filterable
import webgpu.c.WGPUFeatureName.IndirectFirstInstance
import webgpu.c.WGPUFeatureName.RG11B10UfloatRenderable
import webgpu.c.WGPUFeatureName.ShaderF16
import webgpu.c.WGPUFeatureName.TextureCompressionASTC
import webgpu.c.WGPUFeatureName.TextureCompressionASTCSliced3D
import webgpu.c.WGPUFeatureName.TextureCompressionBC
import webgpu.c.WGPUFeatureName.TextureCompressionBCSliced3D
import webgpu.c.WGPUFeatureName.TextureCompressionETC2
import webgpu.c.WGPUFeatureName.TimestampQuery
import webgpu.c.WGPUFeatureName.Undefined

public enum class WGPUFeatureName(
    public val `value`: Int,
) {
    Undefined(0x00000000),
    DepthClipControl(0x00000001),
    Depth32FloatStencil8(0x00000002),
    TimestampQuery(0x00000003),
    TextureCompressionBC(0x00000004),
    TextureCompressionBCSliced3D(0x00000005),
    TextureCompressionETC2(0x00000006),
    TextureCompressionASTC(0x00000007),
    TextureCompressionASTCSliced3D(0x00000008),
    IndirectFirstInstance(0x00000009),
    ShaderF16(0x0000000A),
    RG11B10UfloatRenderable(0x0000000B),
    BGRA8UnormStorage(0x0000000C),
    Float32Filterable(0x0000000D),
    Float32Blendable(0x0000000E),
    ClipDistances(0x0000000F),
    DualSourceBlending(0x00000010),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUFeatureName::class.java,
            "fromInt",
            MethodType.methodType(WGPUFeatureName::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUFeatureName::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUFeatureName = when (value) {
            Undefined.value -> Undefined
            DepthClipControl.value -> DepthClipControl
            Depth32FloatStencil8.value -> Depth32FloatStencil8
            TimestampQuery.value -> TimestampQuery
            TextureCompressionBC.value -> TextureCompressionBC
            TextureCompressionBCSliced3D.value -> TextureCompressionBCSliced3D
            TextureCompressionETC2.value -> TextureCompressionETC2
            TextureCompressionASTC.value -> TextureCompressionASTC
            TextureCompressionASTCSliced3D.value -> TextureCompressionASTCSliced3D
            IndirectFirstInstance.value -> IndirectFirstInstance
            ShaderF16.value -> ShaderF16
            RG11B10UfloatRenderable.value -> RG11B10UfloatRenderable
            BGRA8UnormStorage.value -> BGRA8UnormStorage
            Float32Filterable.value -> Float32Filterable
            Float32Blendable.value -> Float32Blendable
            ClipDistances.value -> ClipDistances
            DualSourceBlending.value -> DualSourceBlending
            else -> error("enum not found")
        }
    }
}
