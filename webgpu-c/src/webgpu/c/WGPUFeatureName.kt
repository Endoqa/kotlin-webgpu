// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class WGPUFeatureName(
    public val `value`: Int,
) {
    DepthClipControl(0x00000001),
    Depth32FloatStencil8(0x00000002),
    TimestampQuery(0x00000003),
    TextureCompressionBC(0x00000004),
    TextureCompressionETC2(0x00000005),
    TextureCompressionASTC(0x00000006),
    IndirectFirstInstance(0x00000007),
    ShaderF16(0x00000008),
    RG11B10UfloatRenderable(0x00000009),
    BGRA8UnormStorage(0x0000000A),
    Float32Filterable(0x0000000B),
    Subgroups(0x0000000C),
    SubgroupsF16(0x0000000D),
    DawnInternalUsages(0x00050000),
    DawnMultiPlanarFormats(0x00050001),
    DawnNative(0x00050002),
    ChromiumExperimentalTimestampQueryInsidePasses(0x00050003),
    ImplicitDeviceSynchronization(0x00050004),
    SurfaceCapabilities(0x00050005),
    TransientAttachments(0x00050006),
    MSAARenderToSingleSampled(0x00050007),
    DualSourceBlending(0x00050008),
    D3D11MultithreadProtected(0x00050009),
    ANGLETextureSharing(0x0005000A),
    ChromiumExperimentalSubgroups(0x0005000B),
    ChromiumExperimentalSubgroupUniformControlFlow(0x0005000C),
    PixelLocalStorageCoherent(0x0005000D),
    PixelLocalStorageNonCoherent(0x0005000E),
    Unorm16TextureFormats(0x0005000F),
    Snorm16TextureFormats(0x00050010),
    MultiPlanarFormatExtendedUsages(0x00050011),
    MultiPlanarFormatP010(0x00050012),
    HostMappedPointer(0x00050013),
    MultiPlanarRenderTargets(0x00050014),
    MultiPlanarFormatNv12a(0x00050015),
    FramebufferFetch(0x00050016),
    BufferMapExtendedUsages(0x00050017),
    AdapterPropertiesMemoryHeaps(0x00050018),
    AdapterPropertiesD3D(0x00050019),
    AdapterPropertiesVk(0x0005001A),
    R8UnormStorage(0x0005001B),
    FormatCapabilities(0x0005001C),
    DrmFormatCapabilities(0x0005001D),
    Norm16TextureFormats(0x0005001E),
    MultiPlanarFormatNv16(0x0005001F),
    MultiPlanarFormatNv24(0x00050020),
    MultiPlanarFormatP210(0x00050021),
    MultiPlanarFormatP410(0x00050022),
    SharedTextureMemoryVkDedicatedAllocation(0x00050023),
    SharedTextureMemoryAHardwareBuffer(0x00050024),
    SharedTextureMemoryDmaBuf(0x00050025),
    SharedTextureMemoryOpaqueFD(0x00050026),
    SharedTextureMemoryZirconHandle(0x00050027),
    SharedTextureMemoryDXGISharedHandle(0x00050028),
    SharedTextureMemoryD3D11Texture2D(0x00050029),
    SharedTextureMemoryIOSurface(0x0005002A),
    SharedTextureMemoryEGLImage(0x0005002B),
    SharedFenceVkSemaphoreOpaqueFD(0x0005002C),
    SharedFenceVkSemaphoreSyncFD(0x0005002D),
    SharedFenceVkSemaphoreZirconHandle(0x0005002E),
    SharedFenceDXGISharedHandle(0x0005002F),
    SharedFenceMTLSharedEvent(0x00050030),
    SharedBufferMemoryD3D12Resource(0x00050031),
    StaticSamplers(0x00050032),
    YCbCrVulkanSamplers(0x00050033),
    ShaderModuleCompilationOptions(0x00050034),
    DawnLoadResolveTexture(0x00050035),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUFeatureName::class.java,
            "fromInt",
            MethodType.methodType(WGPUFeatureName::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUFeatureName::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUFeatureName = when (value) {
            DepthClipControl.value -> DepthClipControl
            Depth32FloatStencil8.value -> Depth32FloatStencil8
            TimestampQuery.value -> TimestampQuery
            TextureCompressionBC.value -> TextureCompressionBC
            TextureCompressionETC2.value -> TextureCompressionETC2
            TextureCompressionASTC.value -> TextureCompressionASTC
            IndirectFirstInstance.value -> IndirectFirstInstance
            ShaderF16.value -> ShaderF16
            RG11B10UfloatRenderable.value -> RG11B10UfloatRenderable
            BGRA8UnormStorage.value -> BGRA8UnormStorage
            Float32Filterable.value -> Float32Filterable
            Subgroups.value -> Subgroups
            SubgroupsF16.value -> SubgroupsF16
            DawnInternalUsages.value -> DawnInternalUsages
            DawnMultiPlanarFormats.value -> DawnMultiPlanarFormats
            DawnNative.value -> DawnNative
            ChromiumExperimentalTimestampQueryInsidePasses.value ->
                ChromiumExperimentalTimestampQueryInsidePasses

            ImplicitDeviceSynchronization.value -> ImplicitDeviceSynchronization
            SurfaceCapabilities.value -> SurfaceCapabilities
            TransientAttachments.value -> TransientAttachments
            MSAARenderToSingleSampled.value -> MSAARenderToSingleSampled
            DualSourceBlending.value -> DualSourceBlending
            D3D11MultithreadProtected.value -> D3D11MultithreadProtected
            ANGLETextureSharing.value -> ANGLETextureSharing
            ChromiumExperimentalSubgroups.value -> ChromiumExperimentalSubgroups
            ChromiumExperimentalSubgroupUniformControlFlow.value ->
                ChromiumExperimentalSubgroupUniformControlFlow

            PixelLocalStorageCoherent.value -> PixelLocalStorageCoherent
            PixelLocalStorageNonCoherent.value -> PixelLocalStorageNonCoherent
            Unorm16TextureFormats.value -> Unorm16TextureFormats
            Snorm16TextureFormats.value -> Snorm16TextureFormats
            MultiPlanarFormatExtendedUsages.value -> MultiPlanarFormatExtendedUsages
            MultiPlanarFormatP010.value -> MultiPlanarFormatP010
            HostMappedPointer.value -> HostMappedPointer
            MultiPlanarRenderTargets.value -> MultiPlanarRenderTargets
            MultiPlanarFormatNv12a.value -> MultiPlanarFormatNv12a
            FramebufferFetch.value -> FramebufferFetch
            BufferMapExtendedUsages.value -> BufferMapExtendedUsages
            AdapterPropertiesMemoryHeaps.value -> AdapterPropertiesMemoryHeaps
            AdapterPropertiesD3D.value -> AdapterPropertiesD3D
            AdapterPropertiesVk.value -> AdapterPropertiesVk
            R8UnormStorage.value -> R8UnormStorage
            FormatCapabilities.value -> FormatCapabilities
            DrmFormatCapabilities.value -> DrmFormatCapabilities
            Norm16TextureFormats.value -> Norm16TextureFormats
            MultiPlanarFormatNv16.value -> MultiPlanarFormatNv16
            MultiPlanarFormatNv24.value -> MultiPlanarFormatNv24
            MultiPlanarFormatP210.value -> MultiPlanarFormatP210
            MultiPlanarFormatP410.value -> MultiPlanarFormatP410
            SharedTextureMemoryVkDedicatedAllocation.value -> SharedTextureMemoryVkDedicatedAllocation
            SharedTextureMemoryAHardwareBuffer.value -> SharedTextureMemoryAHardwareBuffer
            SharedTextureMemoryDmaBuf.value -> SharedTextureMemoryDmaBuf
            SharedTextureMemoryOpaqueFD.value -> SharedTextureMemoryOpaqueFD
            SharedTextureMemoryZirconHandle.value -> SharedTextureMemoryZirconHandle
            SharedTextureMemoryDXGISharedHandle.value -> SharedTextureMemoryDXGISharedHandle
            SharedTextureMemoryD3D11Texture2D.value -> SharedTextureMemoryD3D11Texture2D
            SharedTextureMemoryIOSurface.value -> SharedTextureMemoryIOSurface
            SharedTextureMemoryEGLImage.value -> SharedTextureMemoryEGLImage
            SharedFenceVkSemaphoreOpaqueFD.value -> SharedFenceVkSemaphoreOpaqueFD
            SharedFenceVkSemaphoreSyncFD.value -> SharedFenceVkSemaphoreSyncFD
            SharedFenceVkSemaphoreZirconHandle.value -> SharedFenceVkSemaphoreZirconHandle
            SharedFenceDXGISharedHandle.value -> SharedFenceDXGISharedHandle
            SharedFenceMTLSharedEvent.value -> SharedFenceMTLSharedEvent
            SharedBufferMemoryD3D12Resource.value -> SharedBufferMemoryD3D12Resource
            StaticSamplers.value -> StaticSamplers
            YCbCrVulkanSamplers.value -> YCbCrVulkanSamplers
            ShaderModuleCompilationOptions.value -> ShaderModuleCompilationOptions
            DawnLoadResolveTexture.value -> DawnLoadResolveTexture
            else -> error("enum not found")
        }
    }
}
