// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUSharedBufferMemoryProperties(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStructOut>
        get() = nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var usage: WGPUBufferUsage
        get() = (usageHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            usageHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var size: uint64_t
        get() = (sizeHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            sizeHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            ValueLayout.JAVA_LONG.withName("usage"),
            ValueLayout.JAVA_LONG.withName("size"),
        ).withName("WGPUSharedBufferMemoryProperties")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val usageHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("usage"))

        @JvmField
        public val sizeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("size"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSharedBufferMemoryProperties =
            WGPUSharedBufferMemoryProperties(alloc.allocate(layout))
    }
}
