// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int
import kotlin.jvm.JvmStatic
import webgpu.c.WGPUSamplerBindingType.BindingNotUsed
import webgpu.c.WGPUSamplerBindingType.Comparison
import webgpu.c.WGPUSamplerBindingType.Filtering
import webgpu.c.WGPUSamplerBindingType.NonFiltering
import webgpu.c.WGPUSamplerBindingType.Undefined

public enum class WGPUSamplerBindingType(
    public val `value`: Int,
) {
    BindingNotUsed(0x00000000),
    Undefined(0x00000001),
    Filtering(0x00000002),
    NonFiltering(0x00000003),
    Comparison(0x00000004),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUSamplerBindingType::class.java,
            "fromInt",
            MethodType.methodType(WGPUSamplerBindingType::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUSamplerBindingType::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUSamplerBindingType = when (value) {
            BindingNotUsed.value -> BindingNotUsed
            Undefined.value -> Undefined
            Filtering.value -> Filtering
            NonFiltering.value -> NonFiltering
            Comparison.value -> Comparison
            else -> error("enum not found")
        }
    }
}
