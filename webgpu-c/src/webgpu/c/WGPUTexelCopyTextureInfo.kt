// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Int
import kotlin.UInt
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPUTexelCopyTextureInfo(
    public val `$mem`: MemorySegment,
) {
    public var texture: WGPUTexture
        get() = WGPUTexelCopyTextureInfo.textureHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUTexelCopyTextureInfo.textureHandle.set(this.`$mem`, 0L, value)
        }

    public var mipLevel: UInt
        get() = (WGPUTexelCopyTextureInfo.mipLevelHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUTexelCopyTextureInfo.mipLevelHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public var origin: WGPUOrigin3D
        get() = WGPUOrigin3D(
            WGPUTexelCopyTextureInfo.originHandle.invokeExact(this.`$mem`, 0L) as
                    MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.origin.`$mem`, 0L, WGPUOrigin3D.layout.byteSize())
        }

    public var aspect: WGPUTextureAspect
        get() = WGPUTextureAspect.fromInt(
            WGPUTexelCopyTextureInfo.aspectHandle.get(this.`$mem`, 0L) as
                    Int
        )
        set(`value`) {
            WGPUTexelCopyTextureInfo.aspectHandle.set(this.`$mem`, 0L, value.value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUTexelCopyTextureInfo.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("texture"),
            ValueLayout.JAVA_INT.withName("mipLevel"),
            WGPUOrigin3D.layout.withName("origin"),
            ValueLayout.JAVA_INT.withName("aspect"),
            java.lang.foreign.MemoryLayout.paddingLayout(4),
        ).withName("WGPUTexelCopyTextureInfo")

        @JvmField
        public val textureHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("texture"))

        @JvmField
        public val mipLevelHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("mipLevel"))

        @JvmField
        public val originHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("origin"))

        @JvmField
        public val aspectHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("aspect"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUTexelCopyTextureInfo =
            WGPUTexelCopyTextureInfo(alloc.allocate(WGPUTexelCopyTextureInfo.layout))
    }
}
