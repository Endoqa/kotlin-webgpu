// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUVertexState(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStruct>
        get() = nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var module: WGPUShaderModule
        get() = moduleHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            moduleHandle.set(this.`$mem`, 0L, value)
        }

    public var entryPoint: Pointer<Byte>
        get() = entryPointHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            entryPointHandle.set(this.`$mem`, 0L, value)
        }

    public var constantCount: ULong
        get() = (constantCountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            constantCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var constants: Pointer<WGPUConstantEntry>
        get() = constantsHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            constantsHandle.set(this.`$mem`, 0L, value)
        }

    public var bufferCount: ULong
        get() = (bufferCountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            bufferCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var buffers: Pointer<WGPUVertexBufferLayout>
        get() = buffersHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            buffersHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            `$RuntimeHelper`.POINTER.withName("module"),
            `$RuntimeHelper`.POINTER.withName("entryPoint"),
            ValueLayout.JAVA_LONG.withName("constantCount"),
            `$RuntimeHelper`.POINTER.withName("constants"),
            ValueLayout.JAVA_LONG.withName("bufferCount"),
            `$RuntimeHelper`.POINTER.withName("buffers"),
        ).withName("WGPUVertexState")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val moduleHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("module"))

        @JvmField
        public val entryPointHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("entryPoint"))

        @JvmField
        public val constantCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("constantCount"))

        @JvmField
        public val constantsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("constants"))

        @JvmField
        public val bufferCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("bufferCount"))

        @JvmField
        public val buffersHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("buffers"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUVertexState =
            WGPUVertexState(alloc.allocate(layout))
    }
}
