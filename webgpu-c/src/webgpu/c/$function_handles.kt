// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.FunctionDescriptor
import java.lang.foreign.Linker
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle

internal val `wgpuAdapterInfoFreeMembers$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterInfoFreeMembers"),
    FunctionDescriptor.ofVoid(
        WGPUAdapterInfo.layout,
    )
)

internal val `wgpuAdapterPropertiesFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuAdapterPropertiesFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUAdapterProperties.layout,
        )
    )

internal val `wgpuAdapterPropertiesMemoryHeapsFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuAdapterPropertiesMemoryHeapsFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUAdapterPropertiesMemoryHeaps.layout,
        )
    )

internal val `wgpuCreateInstance$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCreateInstance"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDrmFormatCapabilitiesFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDrmFormatCapabilitiesFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUDrmFormatCapabilities.layout,
        )
    )

internal val `wgpuGetInstanceFeatures$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuGetInstanceFeatures"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuGetProcAddress$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuGetProcAddress"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedBufferMemoryEndAccessStateFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryEndAccessStateFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUSharedBufferMemoryEndAccessState.layout,
        )
    )

internal val `wgpuSharedTextureMemoryEndAccessStateFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryEndAccessStateFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUSharedTextureMemoryEndAccessState.layout,
        )
    )

internal val `wgpuSurfaceCapabilitiesFreeMembers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSurfaceCapabilitiesFreeMembers"),
        FunctionDescriptor.ofVoid(
            WGPUSurfaceCapabilities.layout,
        )
    )

internal val `wgpuAdapterCreateDevice$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterCreateDevice"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterEnumerateFeatures$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterEnumerateFeatures"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterGetFormatCapabilities$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuAdapterGetFormatCapabilities"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuAdapterGetInfo$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterGetInfo"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterGetInstance$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterGetInstance"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterGetLimits$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterGetLimits"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterGetProperties$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterGetProperties"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterHasFeature$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterHasFeature"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `wgpuAdapterRequestDevice$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterRequestDevice"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterRequestDevice2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterRequestDevice2"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        WGPURequestDeviceCallbackInfo2.layout,
    )
)

internal val `wgpuAdapterRequestDeviceF$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterRequestDeviceF"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        WGPURequestDeviceCallbackInfo.layout,
    )
)

internal val `wgpuAdapterAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuAdapterRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuAdapterRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupLayoutSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupLayoutSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupLayoutAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupLayoutAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBindGroupLayoutRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBindGroupLayoutRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferDestroy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferDestroy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferGetConstMappedRange$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuBufferGetConstMappedRange"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuBufferGetMapState$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferGetMapState"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferGetMappedRange$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferGetMappedRange"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `wgpuBufferGetSize$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferGetSize"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferGetUsage$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferGetUsage"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferMapAsync$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferMapAsync"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferMapAsync2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferMapAsync2"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        WGPUBufferMapCallbackInfo2.layout,
    )
)

internal val `wgpuBufferMapAsyncF$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferMapAsyncF"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        WGPUBufferMapCallbackInfo.layout,
    )
)

internal val `wgpuBufferSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferUnmap$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferUnmap"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuBufferRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuBufferRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandBufferSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandBufferSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandBufferAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandBufferAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandBufferRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandBufferRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandEncoderBeginComputePass$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderBeginComputePass"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderBeginRenderPass$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderBeginRenderPass"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderClearBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderClearBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuCommandEncoderCopyBufferToBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderCopyBufferToBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuCommandEncoderCopyBufferToTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderCopyBufferToTexture"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderCopyTextureToBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderCopyTextureToBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderCopyTextureToTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderCopyTextureToTexture"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderFinish$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandEncoderFinish"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandEncoderInjectValidationError$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderInjectValidationError"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderInsertDebugMarker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderInsertDebugMarker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderPopDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderPopDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderPushDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderPushDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuCommandEncoderResolveQuerySet$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderResolveQuerySet"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuCommandEncoderSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandEncoderSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandEncoderWriteBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderWriteBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuCommandEncoderWriteTimestamp$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuCommandEncoderWriteTimestamp"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuCommandEncoderAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandEncoderAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuCommandEncoderRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuCommandEncoderRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuComputePassEncoderDispatchWorkgroups$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderDispatchWorkgroups"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuComputePassEncoderDispatchWorkgroupsIndirect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderDispatchWorkgroupsIndirect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuComputePassEncoderEnd$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderEnd"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuComputePassEncoderInsertDebugMarker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderInsertDebugMarker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderPopDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderPopDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderPushDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderPushDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderSetBindGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderSetBindGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderSetLabel$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderSetLabel"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderSetPipeline$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderSetPipeline"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePassEncoderWriteTimestamp$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderWriteTimestamp"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuComputePassEncoderAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuComputePassEncoderRelease$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePassEncoderRelease"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuComputePipelineGetBindGroupLayout$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuComputePipelineGetBindGroupLayout"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuComputePipelineSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuComputePipelineSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuComputePipelineAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuComputePipelineAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuComputePipelineRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuComputePipelineRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateBindGroup$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateBindGroup"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateBindGroupLayout$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateBindGroupLayout"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateBuffer"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateCommandEncoder$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateCommandEncoder"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateComputePipeline$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateComputePipeline"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateComputePipelineAsync$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateComputePipelineAsync"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateComputePipelineAsync2$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateComputePipelineAsync2"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            WGPUCreateComputePipelineAsyncCallbackInfo2.layout,
        )
    )

internal val `wgpuDeviceCreateComputePipelineAsyncF$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateComputePipelineAsyncF"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            WGPUCreateComputePipelineAsyncCallbackInfo.layout,
        )
    )

internal val `wgpuDeviceCreateErrorBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateErrorBuffer"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateErrorExternalTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateErrorExternalTexture"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateErrorShaderModule$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateErrorShaderModule"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateErrorTexture$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateErrorTexture"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateExternalTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateExternalTexture"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreatePipelineLayout$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreatePipelineLayout"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateQuerySet$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateQuerySet"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateRenderBundleEncoder$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateRenderBundleEncoder"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateRenderPipeline$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateRenderPipeline"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateRenderPipelineAsync$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateRenderPipelineAsync"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceCreateRenderPipelineAsync2$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateRenderPipelineAsync2"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            WGPUCreateRenderPipelineAsyncCallbackInfo2.layout,
        )
    )

internal val `wgpuDeviceCreateRenderPipelineAsyncF$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceCreateRenderPipelineAsyncF"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            WGPUCreateRenderPipelineAsyncCallbackInfo.layout,
        )
    )

internal val `wgpuDeviceCreateSampler$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateSampler"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateShaderModule$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateShaderModule"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateSwapChain$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateSwapChain"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceCreateTexture$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceCreateTexture"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceDestroy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceDestroy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceEnumerateFeatures$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceEnumerateFeatures"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceForceLoss$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceForceLoss"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceGetAHardwareBufferProperties$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceGetAHardwareBufferProperties"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceGetAdapter$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceGetAdapter"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceGetLimits$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceGetLimits"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceGetQueue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceGetQueue"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceGetSupportedSurfaceUsage$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceGetSupportedSurfaceUsage"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceHasFeature$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceHasFeature"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `wgpuDeviceImportSharedBufferMemory$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceImportSharedBufferMemory"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceImportSharedFence$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceImportSharedFence"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceImportSharedTextureMemory$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceImportSharedTextureMemory"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceInjectError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceInjectError"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDevicePopErrorScope$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDevicePopErrorScope"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDevicePopErrorScope2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDevicePopErrorScope2"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        WGPUPopErrorScopeCallbackInfo2.layout,
    )
)

internal val `wgpuDevicePopErrorScopeF$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDevicePopErrorScopeF"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        WGPUPopErrorScopeCallbackInfo.layout,
    )
)

internal val `wgpuDevicePushErrorScope$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDevicePushErrorScope"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `wgpuDeviceSetDeviceLostCallback$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceSetDeviceLostCallback"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceSetLoggingCallback$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceSetLoggingCallback"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceSetUncapturedErrorCallback$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceSetUncapturedErrorCallback"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceTick$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceTick"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceValidateTextureDescriptor$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuDeviceValidateTextureDescriptor"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuDeviceAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuDeviceRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuDeviceRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureDestroy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureDestroy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureExpire$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureExpire"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureRefresh$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureRefresh"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuExternalTextureRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuExternalTextureRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuInstanceCreateSurface$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceCreateSurface"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuInstanceEnumerateWGSLLanguageFeatures$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuInstanceEnumerateWGSLLanguageFeatures"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuInstanceHasWGSLLanguageFeature$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuInstanceHasWGSLLanguageFeature"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuInstanceProcessEvents$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceProcessEvents"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuInstanceRequestAdapter$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceRequestAdapter"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuInstanceRequestAdapter2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceRequestAdapter2"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        WGPURequestAdapterCallbackInfo2.layout,
    )
)

internal val `wgpuInstanceRequestAdapterF$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceRequestAdapterF"),
    FunctionDescriptor.of(
        WGPUFuture.layout,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        WGPURequestAdapterCallbackInfo.layout,
    )
)

internal val `wgpuInstanceWaitAny$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceWaitAny"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `wgpuInstanceAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuInstanceRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuInstanceRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuPipelineLayoutSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuPipelineLayoutSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuPipelineLayoutAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuPipelineLayoutAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuPipelineLayoutRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuPipelineLayoutRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetDestroy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetDestroy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetGetCount$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetGetCount"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetGetType$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetGetType"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQuerySetRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQuerySetRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueCopyExternalTextureForBrowser$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuQueueCopyExternalTextureForBrowser"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuQueueCopyTextureForBrowser$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuQueueCopyTextureForBrowser"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuQueueOnSubmittedWorkDone$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueOnSubmittedWorkDone"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueOnSubmittedWorkDone2$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuQueueOnSubmittedWorkDone2"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            WGPUQueueWorkDoneCallbackInfo2.layout,
        )
    )

internal val `wgpuQueueOnSubmittedWorkDoneF$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuQueueOnSubmittedWorkDoneF"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            WGPUQueueWorkDoneCallbackInfo.layout,
        )
    )

internal val `wgpuQueueSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueSubmit$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueSubmit"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueWriteBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueWriteBuffer"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `wgpuQueueWriteTexture$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueWriteTexture"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuQueueRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuQueueRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderBundleSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderBundleSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderBundleAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderBundleAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderBundleRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderBundleRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderBundleEncoderDraw$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderDraw"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
    )
)

internal val `wgpuRenderBundleEncoderDrawIndexed$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderDrawIndexed"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderBundleEncoderDrawIndexedIndirect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderDrawIndexedIndirect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderBundleEncoderDrawIndirect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderDrawIndirect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderBundleEncoderFinish$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderFinish"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderInsertDebugMarker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderInsertDebugMarker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderPopDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderPopDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderPushDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderPushDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderSetBindGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderSetBindGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderSetIndexBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderSetIndexBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderBundleEncoderSetLabel$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderSetLabel"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderSetPipeline$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderSetPipeline"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderSetVertexBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderSetVertexBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderBundleEncoderAddRef$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderAddRef"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderBundleEncoderRelease$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderBundleEncoderRelease"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderBeginOcclusionQuery$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderBeginOcclusionQuery"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPassEncoderDraw$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderDraw"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
    )
)

internal val `wgpuRenderPassEncoderDrawIndexed$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderDrawIndexed"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPassEncoderDrawIndexedIndirect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderDrawIndexedIndirect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderPassEncoderDrawIndirect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderDrawIndirect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderPassEncoderEnd$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderEnd"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderPassEncoderEndOcclusionQuery$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderEndOcclusionQuery"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderExecuteBundles$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderExecuteBundles"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderInsertDebugMarker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderInsertDebugMarker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderPixelLocalStorageBarrier$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderPixelLocalStorageBarrier"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderPopDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderPopDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderPushDebugGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderPushDebugGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderSetBindGroup$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetBindGroup"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderSetBlendConstant$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetBlendConstant"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderSetIndexBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetIndexBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderPassEncoderSetLabel$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetLabel"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderSetPipeline$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetPipeline"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuRenderPassEncoderSetScissorRect$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetScissorRect"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPassEncoderSetStencilReference$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetStencilReference"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPassEncoderSetVertexBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetVertexBuffer"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
        )
    )

internal val `wgpuRenderPassEncoderSetViewport$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderSetViewport"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_FLOAT,
            ValueLayout.JAVA_FLOAT,
            ValueLayout.JAVA_FLOAT,
            ValueLayout.JAVA_FLOAT,
            ValueLayout.JAVA_FLOAT,
            ValueLayout.JAVA_FLOAT,
        )
    )

internal val `wgpuRenderPassEncoderWriteTimestamp$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderWriteTimestamp"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPassEncoderAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderPassEncoderRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPassEncoderRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderPipelineGetBindGroupLayout$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuRenderPipelineGetBindGroupLayout"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_INT,
        )
    )

internal val `wgpuRenderPipelineSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPipelineSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderPipelineAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPipelineAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuRenderPipelineRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuRenderPipelineRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSamplerSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSamplerSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSamplerAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSamplerAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSamplerRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSamplerRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuShaderModuleGetCompilationInfo$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuShaderModuleGetCompilationInfo"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuShaderModuleGetCompilationInfo2$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuShaderModuleGetCompilationInfo2"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            WGPUCompilationInfoCallbackInfo2.layout,
        )
    )

internal val `wgpuShaderModuleGetCompilationInfoF$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuShaderModuleGetCompilationInfoF"),
        FunctionDescriptor.of(
            WGPUFuture.layout,
            `$RuntimeHelper`.POINTER,
            WGPUCompilationInfoCallbackInfo.layout,
        )
    )

internal val `wgpuShaderModuleSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuShaderModuleSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuShaderModuleAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuShaderModuleAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuShaderModuleRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuShaderModuleRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedBufferMemoryBeginAccess$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryBeginAccess"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemoryCreateBuffer$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryCreateBuffer"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemoryEndAccess$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryEndAccess"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemoryGetProperties$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryGetProperties"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemoryIsDeviceLost$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryIsDeviceLost"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemorySetLabel$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemorySetLabel"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedBufferMemoryAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedBufferMemoryRelease$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedBufferMemoryRelease"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedFenceExportInfo$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSharedFenceExportInfo"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedFenceAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSharedFenceAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedFenceRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSharedFenceRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSharedTextureMemoryBeginAccess$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryBeginAccess"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryCreateTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryCreateTexture"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryEndAccess$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryEndAccess"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryGetProperties$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryGetProperties"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryIsDeviceLost$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryIsDeviceLost"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemorySetLabel$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemorySetLabel"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryAddRef$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryAddRef"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSharedTextureMemoryRelease$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSharedTextureMemoryRelease"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSurfaceConfigure$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceConfigure"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceGetCapabilities$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceGetCapabilities"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceGetCurrentTexture$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceGetCurrentTexture"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceGetPreferredFormat$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSurfaceGetPreferredFormat"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSurfacePresent$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfacePresent"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceUnconfigure$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceUnconfigure"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSurfaceRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSurfaceRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSwapChainGetCurrentTexture$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSwapChainGetCurrentTexture"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSwapChainGetCurrentTextureView$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuSwapChainGetCurrentTextureView"),
        FunctionDescriptor.of(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuSwapChainPresent$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSwapChainPresent"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSwapChainAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSwapChainAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuSwapChainRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuSwapChainRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureCreateErrorView$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureCreateErrorView"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureCreateView$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureCreateView"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureDestroy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureDestroy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetDepthOrArrayLayers$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("wgpuTextureGetDepthOrArrayLayers"),
        FunctionDescriptor.of(
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `wgpuTextureGetDimension$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetDimension"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetFormat$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetFormat"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetHeight$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetHeight"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetMipLevelCount$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetMipLevelCount"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetSampleCount$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetSampleCount"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetUsage$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetUsage"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureGetWidth$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureGetWidth"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureViewSetLabel$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureViewSetLabel"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureViewAddRef$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureViewAddRef"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `wgpuTextureViewRelease$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("wgpuTextureViewRelease"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)
