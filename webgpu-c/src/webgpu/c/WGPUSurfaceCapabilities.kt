// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu.c

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Long
import kotlin.ULong
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPUSurfaceCapabilities(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStructOut>
        get() = WGPUSurfaceCapabilities.nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUSurfaceCapabilities.nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var usages: WGPUTextureUsage
        get() = (WGPUSurfaceCapabilities.usagesHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            WGPUSurfaceCapabilities.usagesHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var formatCount: ULong
        get() = (WGPUSurfaceCapabilities.formatCountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            WGPUSurfaceCapabilities.formatCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var formats: Pointer<WGPUTextureFormat>
        get() = WGPUSurfaceCapabilities.formatsHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUSurfaceCapabilities.formatsHandle.set(this.`$mem`, 0L, value)
        }

    public var presentModeCount: ULong
        get() = (WGPUSurfaceCapabilities.presentModeCountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            WGPUSurfaceCapabilities.presentModeCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var presentModes: Pointer<WGPUPresentMode>
        get() = WGPUSurfaceCapabilities.presentModesHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUSurfaceCapabilities.presentModesHandle.set(this.`$mem`, 0L, value)
        }

    public var alphaModeCount: ULong
        get() = (WGPUSurfaceCapabilities.alphaModeCountHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            WGPUSurfaceCapabilities.alphaModeCountHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var alphaModes: Pointer<WGPUCompositeAlphaMode>
        get() = WGPUSurfaceCapabilities.alphaModesHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUSurfaceCapabilities.alphaModesHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUSurfaceCapabilities.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            ValueLayout.JAVA_LONG.withName("usages"),
            ValueLayout.JAVA_LONG.withName("formatCount"),
            `$RuntimeHelper`.POINTER.withName("formats"),
            ValueLayout.JAVA_LONG.withName("presentModeCount"),
            `$RuntimeHelper`.POINTER.withName("presentModes"),
            ValueLayout.JAVA_LONG.withName("alphaModeCount"),
            `$RuntimeHelper`.POINTER.withName("alphaModes"),
        ).withName("WGPUSurfaceCapabilities")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val usagesHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("usages"))

        @JvmField
        public val formatCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("formatCount"))

        @JvmField
        public val formatsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("formats"))

        @JvmField
        public val presentModeCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("presentModeCount"))

        @JvmField
        public val presentModesHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("presentModes"))

        @JvmField
        public val alphaModeCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("alphaModeCount"))

        @JvmField
        public val alphaModesHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("alphaModes"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSurfaceCapabilities =
            WGPUSurfaceCapabilities(alloc.allocate(WGPUSurfaceCapabilities.layout))
    }
}
