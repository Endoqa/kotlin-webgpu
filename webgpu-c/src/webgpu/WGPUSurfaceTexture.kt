// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUSurfaceTexture(
    public val `$mem`: MemorySegment,
) {
    public var texture: WGPUTexture
        get() = WGPUSurfaceTexture.textureHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUSurfaceTexture.textureHandle.set(this.`$mem`, 0L, value)
        }

    public var suboptimal: WGPUBool
        get() = (WGPUSurfaceTexture.suboptimalHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUSurfaceTexture.suboptimalHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public var status: WGPUSurfaceGetCurrentTextureStatus
        get() =
            WGPUSurfaceGetCurrentTextureStatus.fromInt(
                WGPUSurfaceTexture.statusHandle.get(
                    this.`$mem`,
                    0L
                ) as Int
            )
        set(`value`) {
            WGPUSurfaceTexture.statusHandle.set(this.`$mem`, 0L, value.value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUSurfaceTexture.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("texture"),
            ValueLayout.JAVA_INT.withName("suboptimal"),
            ValueLayout.JAVA_INT.withName("status"),
        ).withName("WGPUSurfaceTexture")

        @JvmField
        public val textureHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("texture"))

        @JvmField
        public val suboptimalHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("suboptimal"))

        @JvmField
        public val statusHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("status"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSurfaceTexture =
            WGPUSurfaceTexture(alloc.allocate(WGPUSurfaceTexture.layout))
    }
}
