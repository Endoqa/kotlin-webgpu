// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPURenderPassTimestampWrites(
    public val `$mem`: MemorySegment,
) {
    public var querySet: WGPUQuerySet
        get() = querySetHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            querySetHandle.set(this.`$mem`, 0L, value)
        }

    public var beginningOfPassWriteIndex: uint32_t
        get() = (beginningOfPassWriteIndexHandle.get(this.`$mem`, 0L) as
                Int).toUInt()
        set(`value`) {
            beginningOfPassWriteIndexHandle.set(
                this.`$mem`,
                0L, value.toInt()
            )
        }

    public var endOfPassWriteIndex: uint32_t
        get() = (endOfPassWriteIndexHandle.get(this.`$mem`, 0L) as
                Int).toUInt()
        set(`value`) {
            endOfPassWriteIndexHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("querySet"),
            ValueLayout.JAVA_INT.withName("beginningOfPassWriteIndex"),
            ValueLayout.JAVA_INT.withName("endOfPassWriteIndex"),
        ).withName("WGPURenderPassTimestampWrites")

        @JvmField
        public val querySetHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("querySet"))

        @JvmField
        public val beginningOfPassWriteIndexHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("beginningOfPassWriteIndex"))

        @JvmField
        public val endOfPassWriteIndexHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("endOfPassWriteIndex"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPURenderPassTimestampWrites =
            WGPURenderPassTimestampWrites(alloc.allocate(layout))
    }
}
