// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUSharedFenceDXGISharedHandleDescriptor(
    public val `$mem`: MemorySegment,
) {
    public var chain: WGPUChainedStruct
        get() =
            WGPUChainedStruct(
                WGPUSharedFenceDXGISharedHandleDescriptor.chainHandle.invokeExact(
                    this.`$mem`,
                    0L
                ) as MemorySegment
            )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.chain.`$mem`, 0L,
                WGPUChainedStruct.layout.byteSize()
            )
        }

    public var handle: Pointer<Unit>
        get() = WGPUSharedFenceDXGISharedHandleDescriptor.handleHandle.get(this.`$mem`, 0L) as
                MemorySegment
        set(`value`) {
            WGPUSharedFenceDXGISharedHandleDescriptor.handleHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUSharedFenceDXGISharedHandleDescriptor.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            WGPUChainedStruct.layout.withName("chain"),
            `$RuntimeHelper`.POINTER.withName("handle"),
        ).withName("WGPUSharedFenceDXGISharedHandleDescriptor")

        @JvmField
        public val chainHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("chain"))

        @JvmField
        public val handleHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("handle"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSharedFenceDXGISharedHandleDescriptor =
            WGPUSharedFenceDXGISharedHandleDescriptor(alloc.allocate(WGPUSharedFenceDXGISharedHandleDescriptor.layout))
    }
}
