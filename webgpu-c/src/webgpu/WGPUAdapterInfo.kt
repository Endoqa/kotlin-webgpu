// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUAdapterInfo(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStructOut>
        get() = WGPUAdapterInfo.nextInChainHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUAdapterInfo.nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var vendor: Pointer<Byte>
        get() = WGPUAdapterInfo.vendorHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUAdapterInfo.vendorHandle.set(this.`$mem`, 0L, value)
        }

    public var architecture: Pointer<Byte>
        get() = WGPUAdapterInfo.architectureHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUAdapterInfo.architectureHandle.set(this.`$mem`, 0L, value)
        }

    public var device: Pointer<Byte>
        get() = WGPUAdapterInfo.deviceHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUAdapterInfo.deviceHandle.set(this.`$mem`, 0L, value)
        }

    public var description: Pointer<Byte>
        get() = WGPUAdapterInfo.descriptionHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            WGPUAdapterInfo.descriptionHandle.set(this.`$mem`, 0L, value)
        }

    public var backendType: WGPUBackendType
        get() = WGPUBackendType.fromInt(WGPUAdapterInfo.backendTypeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            WGPUAdapterInfo.backendTypeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var adapterType: WGPUAdapterType
        get() = WGPUAdapterType.fromInt(WGPUAdapterInfo.adapterTypeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            WGPUAdapterInfo.adapterTypeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var vendorID: uint32_t
        get() = (WGPUAdapterInfo.vendorIDHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUAdapterInfo.vendorIDHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public var deviceID: uint32_t
        get() = (WGPUAdapterInfo.deviceIDHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUAdapterInfo.deviceIDHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUAdapterInfo.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            `$RuntimeHelper`.POINTER.withName("vendor"),
            `$RuntimeHelper`.POINTER.withName("architecture"),
            `$RuntimeHelper`.POINTER.withName("device"),
            `$RuntimeHelper`.POINTER.withName("description"),
            ValueLayout.JAVA_INT.withName("backendType"),
            ValueLayout.JAVA_INT.withName("adapterType"),
            ValueLayout.JAVA_INT.withName("vendorID"),
            ValueLayout.JAVA_INT.withName("deviceID"),
        ).withName("WGPUAdapterInfo")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val vendorHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("vendor"))

        @JvmField
        public val architectureHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("architecture"))

        @JvmField
        public val deviceHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("device"))

        @JvmField
        public val descriptionHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("description"))

        @JvmField
        public val backendTypeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("backendType"))

        @JvmField
        public val adapterTypeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("adapterType"))

        @JvmField
        public val vendorIDHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("vendorID"))

        @JvmField
        public val deviceIDHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("deviceID"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUAdapterInfo =
            WGPUAdapterInfo(alloc.allocate(WGPUAdapterInfo.layout))
    }
}
