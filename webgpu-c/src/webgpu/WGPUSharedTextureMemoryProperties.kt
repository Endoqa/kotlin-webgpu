// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUSharedTextureMemoryProperties(
    public val `$mem`: MemorySegment,
) {
    public var nextInChain: Pointer<WGPUChainedStructOut>
        get() = WGPUSharedTextureMemoryProperties.nextInChainHandle.get(this.`$mem`, 0L) as
                MemorySegment
        set(`value`) {
            WGPUSharedTextureMemoryProperties.nextInChainHandle.set(this.`$mem`, 0L, value)
        }

    public var usage: WGPUTextureUsageFlags
        get() = (WGPUSharedTextureMemoryProperties.usageHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            WGPUSharedTextureMemoryProperties.usageHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public var size: WGPUExtent3D
        get() = WGPUExtent3D(
            WGPUSharedTextureMemoryProperties.sizeHandle.invokeExact(this.`$mem`, 0L)
                    as MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.size.`$mem`, 0L, WGPUExtent3D.layout.byteSize())
        }

    public var format: WGPUTextureFormat
        get() =
            WGPUTextureFormat.fromInt(
                WGPUSharedTextureMemoryProperties.formatHandle.get(
                    this.`$mem`,
                    0L
                ) as Int
            )
        set(`value`) {
            WGPUSharedTextureMemoryProperties.formatHandle.set(this.`$mem`, 0L, value.value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUSharedTextureMemoryProperties.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("nextInChain"),
            ValueLayout.JAVA_INT.withName("usage"),
            WGPUExtent3D.layout.withName("size"),
            ValueLayout.JAVA_INT.withName("format"),
            java.lang.foreign.MemoryLayout.paddingLayout(4),
        ).withName("WGPUSharedTextureMemoryProperties")

        @JvmField
        public val nextInChainHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("nextInChain"))

        @JvmField
        public val usageHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("usage"))

        @JvmField
        public val sizeHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("size"))

        @JvmField
        public val formatHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("format"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSharedTextureMemoryProperties =
            WGPUSharedTextureMemoryProperties(alloc.allocate(WGPUSharedTextureMemoryProperties.layout))
    }
}
