// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.*
import java.lang.invoke.MethodHandle

@JvmInline
public value class WGPUSharedTextureMemoryAHardwareBufferProperties(
    public val `$mem`: MemorySegment,
) {
    public var chain: WGPUChainedStructOut
        get() =
            WGPUChainedStructOut(
                WGPUSharedTextureMemoryAHardwareBufferProperties.chainHandle.invokeExact(
                    this.`$mem`,
                    0L
                ) as MemorySegment
            )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.chain.`$mem`, 0L,
                WGPUChainedStructOut.layout.byteSize()
            )
        }

    public var yCbCrInfo: WGPUYCbCrVkDescriptor
        get() =
            WGPUYCbCrVkDescriptor(
                WGPUSharedTextureMemoryAHardwareBufferProperties.yCbCrInfoHandle.invokeExact(
                    this.`$mem`,
                    0L
                ) as MemorySegment
            )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.yCbCrInfo.`$mem`, 0L,
                WGPUYCbCrVkDescriptor.layout.byteSize()
            )
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(WGPUSharedTextureMemoryAHardwareBufferProperties.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            WGPUChainedStructOut.layout.withName("chain"),
            WGPUYCbCrVkDescriptor.layout.withName("yCbCrInfo"),
        ).withName("WGPUSharedTextureMemoryAHardwareBufferProperties")

        @JvmField
        public val chainHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("chain"))

        @JvmField
        public val yCbCrInfoHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("yCbCrInfo"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUSharedTextureMemoryAHardwareBufferProperties =
            WGPUSharedTextureMemoryAHardwareBufferProperties(
                alloc.allocate(
                    WGPUSharedTextureMemoryAHardwareBufferProperties.layout
                )
            )
    }
}
