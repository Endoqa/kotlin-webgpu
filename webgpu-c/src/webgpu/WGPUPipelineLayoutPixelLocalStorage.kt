// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.foreign.Arena
import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.SegmentAllocator
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle
import kotlin.Boolean
import kotlin.Long
import kotlin.ULong
import kotlin.jvm.JvmField
import kotlin.jvm.JvmInline
import kotlin.jvm.JvmStatic

@JvmInline
public value class WGPUPipelineLayoutPixelLocalStorage(
    public val `$mem`: MemorySegment,
) {
    public var chain: WGPUChainedStruct
        get() =
            WGPUChainedStruct(
                chainHandle.invokeExact(
                    this.`$mem`,
                    0L
                ) as MemorySegment
            )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.chain.`$mem`, 0L,
                WGPUChainedStruct.layout.byteSize()
            )
        }

    public var totalPixelLocalStorageSize: uint64_t
        get() = (totalPixelLocalStorageSizeHandle.get(
            this.`$mem`,
            0L
        ) as Long).toULong()
        set(`value`) {
            totalPixelLocalStorageSizeHandle.set(
                this.`$mem`,
                0L, value.toLong()
            )
        }

    public var storageAttachmentCount: ULong
        get() = (storageAttachmentCountHandle.get(this.`$mem`, 0L)
                as Long).toULong()
        set(`value`) {
            storageAttachmentCountHandle.set(
                this.`$mem`,
                0L, value.toLong()
            )
        }

    public var storageAttachments: Pointer<WGPUPipelineLayoutStorageAttachment>
        get() = storageAttachmentsHandle.get(this.`$mem`, 0L) as
                MemorySegment
        set(`value`) {
            storageAttachmentsHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            WGPUChainedStruct.layout.withName("chain"),
            ValueLayout.JAVA_LONG.withName("totalPixelLocalStorageSize"),
            ValueLayout.JAVA_LONG.withName("storageAttachmentCount"),
            `$RuntimeHelper`.POINTER.withName("storageAttachments"),
        ).withName("WGPUPipelineLayoutPixelLocalStorage")

        @JvmField
        public val chainHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("chain"))

        @JvmField
        public val totalPixelLocalStorageSizeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("totalPixelLocalStorageSize"))

        @JvmField
        public val storageAttachmentCountHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("storageAttachmentCount"))

        @JvmField
        public val storageAttachmentsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("storageAttachments"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUPipelineLayoutPixelLocalStorage =
            WGPUPipelineLayoutPixelLocalStorage(alloc.allocate(layout))
    }
}
