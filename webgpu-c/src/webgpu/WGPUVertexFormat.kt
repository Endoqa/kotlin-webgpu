// this file is auto generated by endoqa kotlin ffi, modify it with caution
package webgpu

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class WGPUVertexFormat(
    public val `value`: Int,
) {
    Undefined(0x00000000),
    Uint8x2(0x00000001),
    Uint8x4(0x00000002),
    Sint8x2(0x00000003),
    Sint8x4(0x00000004),
    Unorm8x2(0x00000005),
    Unorm8x4(0x00000006),
    Snorm8x2(0x00000007),
    Snorm8x4(0x00000008),
    Uint16x2(0x00000009),
    Uint16x4(0x0000000a),
    Sint16x2(0x0000000b),
    Sint16x4(0x0000000c),
    Unorm16x2(0x0000000d),
    Unorm16x4(0x0000000e),
    Snorm16x2(0x0000000f),
    Snorm16x4(0x00000010),
    Float16x2(0x00000011),
    Float16x4(0x00000012),
    Float32(0x00000013),
    Float32x2(0x00000014),
    Float32x3(0x00000015),
    Float32x4(0x00000016),
    Uint32(0x00000017),
    Uint32x2(0x00000018),
    Uint32x3(0x00000019),
    Uint32x4(0x0000001a),
    Sint32(0x0000001b),
    Sint32x2(0x0000001c),
    Sint32x3(0x0000001d),
    Sint32x4(0x0000001e),
    Unorm10_10_10_2(0x0000001f),
    Force32(0x7fffffff),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUVertexFormat::class.java,
            "fromInt",
            MethodType.methodType(WGPUVertexFormat::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUVertexFormat::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUVertexFormat = when (value) {
            0x00000000 -> Undefined
            0x00000001 -> Uint8x2
            0x00000002 -> Uint8x4
            0x00000003 -> Sint8x2
            0x00000004 -> Sint8x4
            0x00000005 -> Unorm8x2
            0x00000006 -> Unorm8x4
            0x00000007 -> Snorm8x2
            0x00000008 -> Snorm8x4
            0x00000009 -> Uint16x2
            0x0000000a -> Uint16x4
            0x0000000b -> Sint16x2
            0x0000000c -> Sint16x4
            0x0000000d -> Unorm16x2
            0x0000000e -> Unorm16x4
            0x0000000f -> Snorm16x2
            0x00000010 -> Snorm16x4
            0x00000011 -> Float16x2
            0x00000012 -> Float16x4
            0x00000013 -> Float32
            0x00000014 -> Float32x2
            0x00000015 -> Float32x3
            0x00000016 -> Float32x4
            0x00000017 -> Uint32
            0x00000018 -> Uint32x2
            0x00000019 -> Uint32x3
            0x0000001a -> Uint32x4
            0x0000001b -> Sint32
            0x0000001c -> Sint32x2
            0x0000001d -> Sint32x3
            0x0000001e -> Sint32x4
            0x0000001f -> Unorm10_10_10_2
            0x7fffffff -> Force32
            else -> error("enum not found")
        }
    }
}
