// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.wgpu

public typealias WGPUFlags = ULong

public typealias WGPUBool = UInt

public typealias WGPUStringView = WGPUStringView

public typealias WGPUChainedStruct = WGPUChainedStruct

public typealias WGPUChainedStructOut = WGPUChainedStructOut

/**
 * TODO
 */
public typealias WGPUAdapter = Pointer<WGPUAdapterImpl>

/**
 * TODO
 */
public typealias WGPUBindGroup = Pointer<WGPUBindGroupImpl>

/**
 * TODO
 */
public typealias WGPUBindGroupLayout = Pointer<WGPUBindGroupLayoutImpl>

/**
 * TODO
 */
public typealias WGPUBuffer = Pointer<WGPUBufferImpl>

/**
 * TODO
 */
public typealias WGPUCommandBuffer = Pointer<WGPUCommandBufferImpl>

/**
 * TODO
 */
public typealias WGPUCommandEncoder = Pointer<WGPUCommandEncoderImpl>

/**
 * TODO
 */
public typealias WGPUComputePassEncoder = Pointer<WGPUComputePassEncoderImpl>

/**
 * TODO
 */
public typealias WGPUComputePipeline = Pointer<WGPUComputePipelineImpl>

/**
 * TODO
 */
public typealias WGPUDevice = Pointer<WGPUDeviceImpl>

/**
 * TODO
 */
public typealias WGPUInstance = Pointer<WGPUInstanceImpl>

/**
 * TODO
 */
public typealias WGPUPipelineLayout = Pointer<WGPUPipelineLayoutImpl>

/**
 * TODO
 */
public typealias WGPUQuerySet = Pointer<WGPUQuerySetImpl>

/**
 * TODO
 */
public typealias WGPUQueue = Pointer<WGPUQueueImpl>

/**
 * TODO
 */
public typealias WGPURenderBundle = Pointer<WGPURenderBundleImpl>

/**
 * TODO
 */
public typealias WGPURenderBundleEncoder = Pointer<WGPURenderBundleEncoderImpl>

/**
 * TODO
 */
public typealias WGPURenderPassEncoder = Pointer<WGPURenderPassEncoderImpl>

/**
 * TODO
 */
public typealias WGPURenderPipeline = Pointer<WGPURenderPipelineImpl>

/**
 * TODO
 */
public typealias WGPUSampler = Pointer<WGPUSamplerImpl>

/**
 * TODO
 */
public typealias WGPUShaderModule = Pointer<WGPUShaderModuleImpl>

/**
 * An object used to continuously present image data to the user, see @ref Surfaces for more details.
 */
public typealias WGPUSurface = Pointer<WGPUSurfaceImpl>

/**
 * TODO
 */
public typealias WGPUTexture = Pointer<WGPUTextureImpl>

/**
 * TODO
 */
public typealias WGPUTextureView = Pointer<WGPUTextureViewImpl>

public typealias WGPUBufferMapCallback = Pointer<(
    status: WGPUMapAsyncStatus,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCompilationInfoCallback = Pointer<(
    status: WGPUCompilationInfoRequestStatus,
    compilationInfo: Pointer<WGPUCompilationInfo>,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateComputePipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPUComputePipeline,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUCreateRenderPipelineAsyncCallback = Pointer<(
    status: WGPUCreatePipelineAsyncStatus,
    pipeline: WGPURenderPipeline,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUDeviceLostCallback = Pointer<(
    device: Pointer<WGPUDevice>,
    reason: WGPUDeviceLostReason,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUPopErrorScopeCallback = Pointer<(
    status: WGPUPopErrorScopeStatus,
    type: WGPUErrorType,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUQueueWorkDoneCallback = Pointer<(
    status: WGPUQueueWorkDoneStatus,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestAdapterCallback = Pointer<(
    status: WGPURequestAdapterStatus,
    adapter: WGPUAdapter,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPURequestDeviceCallback = Pointer<(
    status: WGPURequestDeviceStatus,
    device: WGPUDevice,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>

public typealias WGPUUncapturedErrorCallback = Pointer<(
    device: Pointer<WGPUDevice>,
    type: WGPUErrorType,
    message: WGPUStringView,
    userdata1: Pointer<Unit>,
    userdata2: Pointer<Unit>,
) -> Unit>
