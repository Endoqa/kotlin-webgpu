// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.wgpu

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class WGPUStringView(
    public val `$mem`: MemorySegment,
) {
    public var `data`: Pointer<Byte>
        get() = dataHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            dataHandle.set(this.`$mem`, 0L, value)
        }

    public var length: ULong
        get() = (lengthHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            lengthHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("data"),
            ValueLayout.JAVA_LONG.withName("length"),
        ).withName("WGPUStringView")

        @JvmField
        public val dataHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("data"))

        @JvmField
        public val lengthHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("length"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): WGPUStringView =
            WGPUStringView(alloc.allocate(layout))
    }
}
