// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.wgpu

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class WGPUVertexFormat(
    public val `value`: Int,
) {
    Uint8(0x00000001),
    Uint8x2(0x00000002),
    Uint8x4(0x00000003),
    Sint8(0x00000004),
    Sint8x2(0x00000005),
    Sint8x4(0x00000006),
    Unorm8(0x00000007),
    Unorm8x2(0x00000008),
    Unorm8x4(0x00000009),
    Snorm8(0x0000000A),
    Snorm8x2(0x0000000B),
    Snorm8x4(0x0000000C),
    Uint16(0x0000000D),
    Uint16x2(0x0000000E),
    Uint16x4(0x0000000F),
    Sint16(0x00000010),
    Sint16x2(0x00000011),
    Sint16x4(0x00000012),
    Unorm16(0x00000013),
    Unorm16x2(0x00000014),
    Unorm16x4(0x00000015),
    Snorm16(0x00000016),
    Snorm16x2(0x00000017),
    Snorm16x4(0x00000018),
    Float16(0x00000019),
    Float16x2(0x0000001A),
    Float16x4(0x0000001B),
    Float32(0x0000001C),
    Float32x2(0x0000001D),
    Float32x3(0x0000001E),
    Float32x4(0x0000001F),
    Uint32(0x00000020),
    Uint32x2(0x00000021),
    Uint32x3(0x00000022),
    Uint32x4(0x00000023),
    Sint32(0x00000024),
    Sint32x2(0x00000025),
    Sint32x3(0x00000026),
    Sint32x4(0x00000027),
    Unorm10_10_10_2(0x00000028),
    Unorm8x4BGRA(0x00000029),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            WGPUVertexFormat::class.java,
            "fromInt",
            MethodType.methodType(WGPUVertexFormat::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            WGPUVertexFormat::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): WGPUVertexFormat = when (value) {
            Uint8.value -> Uint8
            Uint8x2.value -> Uint8x2
            Uint8x4.value -> Uint8x4
            Sint8.value -> Sint8
            Sint8x2.value -> Sint8x2
            Sint8x4.value -> Sint8x4
            Unorm8.value -> Unorm8
            Unorm8x2.value -> Unorm8x2
            Unorm8x4.value -> Unorm8x4
            Snorm8.value -> Snorm8
            Snorm8x2.value -> Snorm8x2
            Snorm8x4.value -> Snorm8x4
            Uint16.value -> Uint16
            Uint16x2.value -> Uint16x2
            Uint16x4.value -> Uint16x4
            Sint16.value -> Sint16
            Sint16x2.value -> Sint16x2
            Sint16x4.value -> Sint16x4
            Unorm16.value -> Unorm16
            Unorm16x2.value -> Unorm16x2
            Unorm16x4.value -> Unorm16x4
            Snorm16.value -> Snorm16
            Snorm16x2.value -> Snorm16x2
            Snorm16x4.value -> Snorm16x4
            Float16.value -> Float16
            Float16x2.value -> Float16x2
            Float16x4.value -> Float16x4
            Float32.value -> Float32
            Float32x2.value -> Float32x2
            Float32x3.value -> Float32x3
            Float32x4.value -> Float32x4
            Uint32.value -> Uint32
            Uint32x2.value -> Uint32x2
            Uint32x3.value -> Uint32x3
            Uint32x4.value -> Uint32x4
            Sint32.value -> Sint32
            Sint32x2.value -> Sint32x2
            Sint32x3.value -> Sint32x3
            Sint32x4.value -> Sint32x4
            Unorm10_10_10_2.value -> Unorm10_10_10_2
            Unorm8x4BGRA.value -> Unorm8x4BGRA
            else -> error("enum not found")
        }
    }
}
